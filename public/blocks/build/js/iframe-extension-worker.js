(window["webpackJsonpGUI"] = window["webpackJsonpGUI"] || []).push([["iframe-extension-worker"],{

/***/ "./node_modules/scratch-vm/src/extension-support/tw-iframe-extension-worker.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/scratch-vm/src/extension-support/tw-iframe-extension-worker.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
var uid = __webpack_require__(/*! ../util/uid */ "./node_modules/scratch-vm/src/util/uid.js");
var frameSource = __webpack_require__(/*! ./tw-load-script-as-plain-text!./tw-iframe-extension-worker-entry */ "./node_modules/scratch-vm/src/extension-support/tw-load-script-as-plain-text.js!./node_modules/scratch-vm/src/extension-support/tw-iframe-extension-worker-entry.js");
var none = "'none'";
var featurePolicy = {
  'accelerometer': none,
  'ambient-light-sensor': none,
  'battery': none,
  'camera': none,
  'display-capture': none,
  'document-domain': none,
  'encrypted-media': none,
  'fullscreen': none,
  'geolocation': none,
  'gyroscope': none,
  'magnetometer': none,
  'microphone': none,
  'midi': none,
  'payment': none,
  'picture-in-picture': none,
  'publickey-credentials-get': none,
  'speaker-selection': none,
  'usb': none,
  'vibrate': none,
  'vr': none,
  'screen-wake-lock': none,
  'web-share': none,
  'interest-cohort': none
};
var generateAllow = function generateAllow() {
  return Object.entries(featurePolicy).map(function (_ref) {
    var _ref2 = _slicedToArray(_ref, 2),
      name = _ref2[0],
      permission = _ref2[1];
    return "".concat(name, " ").concat(permission);
  }).join('; ');
};
var IframeExtensionWorker = /*#__PURE__*/function () {
  function IframeExtensionWorker() {
    _classCallCheck(this, IframeExtensionWorker);
    this.id = uid();
    this.isRemote = true;
    this.ready = false;
    this.queuedMessages = [];
    this.iframe = document.createElement('iframe');
    this.iframe.className = 'tw-custom-extension-frame';
    this.iframe.dataset.id = this.id;
    this.iframe.style.display = 'none';
    this.iframe.setAttribute('aria-hidden', 'true');
    this.iframe.sandbox = 'allow-scripts';
    this.iframe.allow = generateAllow();
    document.body.appendChild(this.iframe);
    window.addEventListener('message', this._onWindowMessage.bind(this));
    var blob = new Blob([// eslint-disable-next-line max-len
    "<!DOCTYPE html><body><script>window.__WRAPPED_IFRAME_ID__=".concat(JSON.stringify(this.id), ";").concat(frameSource, "</script></body>")], {
      type: 'text/html; charset=utf-8'
    });
    this.iframe.src = URL.createObjectURL(blob);
  }
  return _createClass(IframeExtensionWorker, [{
    key: "_onWindowMessage",
    value: function _onWindowMessage(e) {
      if (!e.data || e.data.vmIframeId !== this.id) {
        return;
      }
      if (e.data.ready) {
        this.ready = true;
        var _iterator = _createForOfIteratorHelper(this.queuedMessages),
          _step;
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var _step$value = _step.value,
              data = _step$value.data,
              transfer = _step$value.transfer;
            this.postMessage(data, transfer);
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
        this.queuedMessages.length = 0;
      }
      if (e.data.message) {
        this.onmessage({
          data: e.data.message
        });
      }
    }
  }, {
    key: "onmessage",
    value: function onmessage() {
      // Should be overridden
    }
  }, {
    key: "postMessage",
    value: function postMessage(data, transfer) {
      if (this.ready) {
        if (transfer) {
          this.iframe.contentWindow.postMessage(data, '*', transfer);
        } else {
          this.iframe.contentWindow.postMessage(data, '*');
        }
      } else {
        this.queuedMessages.push({
          data: data,
          transfer: transfer
        });
      }
    }
  }]);
}();
module.exports = IframeExtensionWorker;

/***/ }),

/***/ "./node_modules/scratch-vm/src/extension-support/tw-load-script-as-plain-text.js!./node_modules/scratch-vm/src/extension-support/tw-iframe-extension-worker-entry.js":
/*!***************************************************************************************************************************************************************************!*\
  !*** ./node_modules/scratch-vm/src/extension-support/tw-load-script-as-plain-text.js!./node_modules/scratch-vm/src/extension-support/tw-iframe-extension-worker-entry.js ***!
  \***************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"./node_modules/babel-loader/lib/index.js?!./node_modules/scratch-vm/src/extension-support/tw-iframe-extension-worker-entry.js\");\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"./node_modules/@turbowarp/nanolog/index.js\":\n/*!**************************************************!*\\\n  !*** ./node_modules/@turbowarp/nanolog/index.js ***!\n  \\**************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n// only use colors in non-browser environments\nconst addColors = typeof document === 'undefined';\n\nconst RESET = addColors ? '\\u001b[0m' : '';\nconst GRAY = addColors ? '\\u001b[90m' : '';\nconst BLUE = addColors ? '\\u001b[34m' : '';\nconst CYAN = addColors ? '\\u001b[36m' : '';\nconst YELLOW = addColors ? '\\u001b[33m' : '';\nconst RED = addColors ? '\\u001b[31m' : '';\n\nconst DEBUG = `${BLUE}debug${RESET}`;\nconst INFO = `${CYAN}info${RESET}`;\nconst WARN = `${YELLOW}warn${RESET}`;\nconst ERROR = `${RED}error${RESET}`;\n\nconst createLog = (namespace = '') => {\n    const log = (childNamespace) => createLog(namespace ? `${namespace} ${childNamespace}` : childNamespace);\n\n    const formattedNamespace = namespace ? [`${GRAY}${namespace}${RESET}`] : [];\n\n    log.debug = log.log = console.debug.bind(console, ...formattedNamespace, DEBUG);\n    log.info = console.log.bind(console, ...formattedNamespace, INFO)\n    log.warn = log.warning = console.warn.bind(console, ...formattedNamespace, WARN)\n    log.error = console.error.bind(console, ...formattedNamespace, ERROR);\n\n    return log;\n};\n\n/**\n * @deprecated does nothing\n */\ncreateLog.enable = createLog.disable = () => {};\n\nmodule.exports = createLog;\n\n\n/***/ }),\n\n/***/ \"./node_modules/babel-loader/lib/index.js?!./node_modules/scratch-vm/src/extension-support/tw-iframe-extension-worker-entry.js\":\n/*!***********************************************************************************************************************************!*\\\n  !*** ./node_modules/babel-loader/lib??ref--4!./node_modules/scratch-vm/src/extension-support/tw-iframe-extension-worker-entry.js ***!\n  \\***********************************************************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var context = __webpack_require__(/*! ./tw-extension-worker-context */ \"./node_modules/scratch-vm/src/extension-support/tw-extension-worker-context.js\");\nvar jQuery = __webpack_require__(/*! ./tw-jquery-shim */ \"./node_modules/scratch-vm/src/extension-support/tw-jquery-shim.js\");\nglobal.$ = jQuery;\nglobal.jQuery = jQuery;\nvar id = window.__WRAPPED_IFRAME_ID__;\ncontext.isWorker = false;\ncontext.centralDispatchService = {\n  postMessage: function postMessage(message, transfer) {\n    var data = {\n      vmIframeId: id,\n      message: message\n    };\n    if (transfer) {\n      window.parent.postMessage(data, '*', transfer);\n    } else {\n      window.parent.postMessage(data, '*');\n    }\n  }\n};\n__webpack_require__(/*! ./extension-worker */ \"./node_modules/scratch-vm/src/extension-support/extension-worker.js\");\nwindow.parent.postMessage({\n  vmIframeId: id,\n  ready: true\n}, '*');\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n/***/ }),\n\n/***/ \"./node_modules/format-message-formats/index.js\":\n/*!******************************************************!*\\\n  !*** ./node_modules/format-message-formats/index.js ***!\n  \\******************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n// @flow\nvar LONG = 'long'\nvar SHORT = 'short'\nvar NARROW = 'narrow'\nvar NUMERIC = 'numeric'\nvar TWODIGIT = '2-digit'\n\n/**\n * formatting information\n **/\nmodule.exports = {\n  number: {\n    decimal: {\n      style: 'decimal'\n    },\n    integer: {\n      style: 'decimal',\n      maximumFractionDigits: 0\n    },\n    currency: {\n      style: 'currency',\n      currency: 'USD'\n    },\n    percent: {\n      style: 'percent'\n    },\n    default: {\n      style: 'decimal'\n    }\n  },\n  date: {\n    short: {\n      month: NUMERIC,\n      day: NUMERIC,\n      year: TWODIGIT\n    },\n    medium: {\n      month: SHORT,\n      day: NUMERIC,\n      year: NUMERIC\n    },\n    long: {\n      month: LONG,\n      day: NUMERIC,\n      year: NUMERIC\n    },\n    full: {\n      month: LONG,\n      day: NUMERIC,\n      year: NUMERIC,\n      weekday: LONG\n    },\n    default: {\n      month: SHORT,\n      day: NUMERIC,\n      year: NUMERIC\n    }\n  },\n  time: {\n    short: {\n      hour: NUMERIC,\n      minute: NUMERIC\n    },\n    medium: {\n      hour: NUMERIC,\n      minute: NUMERIC,\n      second: NUMERIC\n    },\n    long: {\n      hour: NUMERIC,\n      minute: NUMERIC,\n      second: NUMERIC,\n      timeZoneName: SHORT\n    },\n    full: {\n      hour: NUMERIC,\n      minute: NUMERIC,\n      second: NUMERIC,\n      timeZoneName: SHORT\n    },\n    default: {\n      hour: NUMERIC,\n      minute: NUMERIC,\n      second: NUMERIC\n    }\n  },\n  duration: {\n    default: {\n      hours: {\n        minimumIntegerDigits: 1,\n        maximumFractionDigits: 0\n      },\n      minutes: {\n        minimumIntegerDigits: 2,\n        maximumFractionDigits: 0\n      },\n      seconds: {\n        minimumIntegerDigits: 2,\n        maximumFractionDigits: 3\n      }\n    }\n  },\n  parseNumberPattern: function (pattern/*: ?string */) {\n    if (!pattern) return\n    var options = {}\n    var currency = pattern.match(/\\b[A-Z]{3}\\b/i)\n    var syms = pattern.replace(/[^¤]/g, '').length\n    if (!syms && currency) syms = 1\n    if (syms) {\n      options.style = 'currency'\n      options.currencyDisplay = syms === 1 ? 'symbol' : syms === 2 ? 'code' : 'name'\n      options.currency = currency ? currency[0].toUpperCase() : 'USD'\n    } else if (pattern.indexOf('%') >= 0) {\n      options.style = 'percent'\n    }\n    if (!/[@#0]/.test(pattern)) return options.style ? options : undefined\n    options.useGrouping = pattern.indexOf(',') >= 0\n    if (/E\\+?[@#0]+/i.test(pattern) || pattern.indexOf('@') >= 0) {\n      var size = pattern.replace(/E\\+?[@#0]+|[^@#0]/gi, '')\n      options.minimumSignificantDigits = Math.min(Math.max(size.replace(/[^@0]/g, '').length, 1), 21)\n      options.maximumSignificantDigits = Math.min(Math.max(size.length, 1), 21)\n    } else {\n      var parts = pattern.replace(/[^#0.]/g, '').split('.')\n      var integer = parts[0]\n      var n = integer.length - 1\n      while (integer[n] === '0') --n\n      options.minimumIntegerDigits = Math.min(Math.max(integer.length - 1 - n, 1), 21)\n      var fraction = parts[1] || ''\n      n = 0\n      while (fraction[n] === '0') ++n\n      options.minimumFractionDigits = Math.min(Math.max(n, 0), 20)\n      while (fraction[n] === '#') ++n\n      options.maximumFractionDigits = Math.min(Math.max(n, 0), 20)\n    }\n    return options\n  },\n  parseDatePattern: function (pattern/*: ?string */) {\n    if (!pattern) return\n    var options = {}\n    for (var i = 0; i < pattern.length;) {\n      var current = pattern[i]\n      var n = 1\n      while (pattern[++i] === current) ++n\n      switch (current) {\n        case 'G':\n          options.era = n === 5 ? NARROW : n === 4 ? LONG : SHORT\n          break\n        case 'y':\n        case 'Y':\n          options.year = n === 2 ? TWODIGIT : NUMERIC\n          break\n        case 'M':\n        case 'L':\n          n = Math.min(Math.max(n - 1, 0), 4)\n          options.month = [NUMERIC, TWODIGIT, SHORT, LONG, NARROW][n]\n          break\n        case 'E':\n        case 'e':\n        case 'c':\n          options.weekday = n === 5 ? NARROW : n === 4 ? LONG : SHORT\n          break\n        case 'd':\n        case 'D':\n          options.day = n === 2 ? TWODIGIT : NUMERIC\n          break\n        case 'h':\n        case 'K':\n          options.hour12 = true\n          options.hour = n === 2 ? TWODIGIT : NUMERIC\n          break\n        case 'H':\n        case 'k':\n          options.hour12 = false\n          options.hour = n === 2 ? TWODIGIT : NUMERIC\n          break\n        case 'm':\n          options.minute = n === 2 ? TWODIGIT : NUMERIC\n          break\n        case 's':\n        case 'S':\n          options.second = n === 2 ? TWODIGIT : NUMERIC\n          break\n        case 'z':\n        case 'Z':\n        case 'v':\n        case 'V':\n          options.timeZoneName = n === 1 ? SHORT : LONG\n          break\n      }\n    }\n    return Object.keys(options).length ? options : undefined\n  }\n}\n\n\n/***/ }),\n\n/***/ \"./node_modules/format-message-interpret/index.js\":\n/*!********************************************************!*\\\n  !*** ./node_modules/format-message-interpret/index.js ***!\n  \\********************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// @flow\n\nvar formats = __webpack_require__(/*! format-message-formats */ \"./node_modules/format-message-formats/index.js\")\nvar lookupClosestLocale = __webpack_require__(/*! lookup-closest-locale */ \"./node_modules/lookup-closest-locale/index.js\")\nvar plurals = __webpack_require__(/*! ./plurals */ \"./node_modules/format-message-interpret/plurals.js\")\n\n/*::\nimport type {\n  AST,\n  SubMessages\n} from '../format-message-parse'\ntype Locale = string\ntype Locales = Locale | Locale[]\ntype Placeholder = any[] // https://github.com/facebook/flow/issues/4050\nexport type Type = (Placeholder, Locales) => (any, ?Object) => any\nexport type Types = { [string]: Type }\n*/\n\nexports = module.exports = function interpret (\n  ast/*: AST */,\n  locale/*:: ?: Locales */,\n  types/*:: ?: Types */\n)/*: (args?: Object) => string */ {\n  return interpretAST(ast, null, locale || 'en', types || {}, true)\n}\n\nexports.toParts = function toParts (\n  ast/*: AST */,\n  locale/*:: ?: Locales */,\n  types/*:: ?: Types */\n)/*: (args?: Object) => any[] */ {\n  return interpretAST(ast, null, locale || 'en', types || {}, false)\n}\n\nfunction interpretAST (\n  elements/*: any[] */,\n  parent/*: ?Placeholder */,\n  locale/*: Locales */,\n  types/*: Types */,\n  join/*: boolean */\n)/*: Function */ {\n  var parts = elements.map(function (element) {\n    return interpretElement(element, parent, locale, types, join)\n  })\n\n  if (!join) {\n    return function format (args) {\n      return parts.reduce(function (parts, part) {\n        return parts.concat(part(args))\n      }, [])\n    }\n  }\n\n  if (parts.length === 1) return parts[0]\n  return function format (args) {\n    var message = ''\n    for (var e = 0; e < parts.length; ++e) {\n      message += parts[e](args)\n    }\n    return message\n  }\n}\n\nfunction interpretElement (\n  element/*: Placeholder */,\n  parent/*: ?Placeholder */,\n  locale/*: Locales */,\n  types/*: Types */,\n  join/*: boolean */\n)/*: Function */ {\n  if (typeof element === 'string') {\n    var value/*: string */ = element\n    return function format () { return value }\n  }\n\n  var id = element[0]\n  var type = element[1]\n\n  if (parent && element[0] === '#') {\n    id = parent[0]\n    var offset = parent[2]\n    var formatter = (types.number || defaults.number)([id, 'number'], locale)\n    return function format (args) {\n      return formatter(getArg(id, args) - offset, args)\n    }\n  }\n\n  // pre-process children\n  var children\n  if (type === 'plural' || type === 'selectordinal') {\n    children = {}\n    Object.keys(element[3]).forEach(function (key) {\n      children[key] = interpretAST(element[3][key], element, locale, types, join)\n    })\n    element = [element[0], element[1], element[2], children]\n  } else if (element[2] && typeof element[2] === 'object') {\n    children = {}\n    Object.keys(element[2]).forEach(function (key) {\n      children[key] = interpretAST(element[2][key], element, locale, types, join)\n    })\n    element = [element[0], element[1], children]\n  }\n\n  var getFrmt = type && (types[type] || defaults[type])\n  if (getFrmt) {\n    var frmt = getFrmt(element, locale)\n    return function format (args) {\n      return frmt(getArg(id, args), args)\n    }\n  }\n\n  return join\n    ? function format (args) { return String(getArg(id, args)) }\n    : function format (args) { return getArg(id, args) }\n}\n\nfunction getArg (id/*: string */, args/*: ?Object */)/*: any */ {\n  if (args && (id in args)) return args[id]\n  var parts = id.split('.')\n  var a = args\n  for (var i = 0, ii = parts.length; a && i < ii; ++i) {\n    a = a[parts[i]]\n  }\n  return a\n}\n\nfunction interpretNumber (element/*: Placeholder */, locales/*: Locales */) {\n  var style = element[2]\n  var options = formats.number[style] || formats.parseNumberPattern(style) || formats.number.default\n  return new Intl.NumberFormat(locales, options).format\n}\n\nfunction interpretDuration (element/*: Placeholder */, locales/*: Locales */) {\n  var style = element[2]\n  var options = formats.duration[style] || formats.duration.default\n  var fs = new Intl.NumberFormat(locales, options.seconds).format\n  var fm = new Intl.NumberFormat(locales, options.minutes).format\n  var fh = new Intl.NumberFormat(locales, options.hours).format\n  var sep = /^fi$|^fi-|^da/.test(String(locales)) ? '.' : ':'\n\n  return function (s, args) {\n    s = +s\n    if (!isFinite(s)) return fs(s)\n    var h = ~~(s / 60 / 60) // ~~ acts much like Math.trunc\n    var m = ~~(s / 60 % 60)\n    var dur = (h ? (fh(Math.abs(h)) + sep) : '') +\n      fm(Math.abs(m)) + sep + fs(Math.abs(s % 60))\n    return s < 0 ? fh(-1).replace(fh(1), dur) : dur\n  }\n}\n\nfunction interpretDateTime (element/*: Placeholder */, locales/*: Locales */) {\n  var type = element[1]\n  var style = element[2]\n  var options = formats[type][style] || formats.parseDatePattern(style) || formats[type].default\n  return new Intl.DateTimeFormat(locales, options).format\n}\n\nfunction interpretPlural (element/*: Placeholder */, locales/*: Locales */) {\n  var type = element[1]\n  var pluralType = type === 'selectordinal' ? 'ordinal' : 'cardinal'\n  var offset = element[2]\n  var children = element[3]\n  var pluralRules\n  if (Intl.PluralRules && Intl.PluralRules.supportedLocalesOf(locales).length > 0) {\n    pluralRules = new Intl.PluralRules(locales, { type: pluralType })\n  } else {\n    var locale = lookupClosestLocale(locales, plurals)\n    var select = (locale && plurals[locale][pluralType]) || returnOther\n    pluralRules = { select: select }\n  }\n\n  return function (value, args) {\n    var clause =\n      children['=' + +value] ||\n      children[pluralRules.select(value - offset)] ||\n      children.other\n    return clause(args)\n  }\n}\n\nfunction returnOther (/*:: n:number */) { return 'other' }\n\nfunction interpretSelect (element/*: Placeholder */, locales/*: Locales */) {\n  var children = element[2]\n  return function (value, args) {\n    var clause = children[value] || children.other\n    return clause(args)\n  }\n}\n\nvar defaults/*: Types */ = {\n  number: interpretNumber,\n  ordinal: interpretNumber, // TODO: support rbnf\n  spellout: interpretNumber, // TODO: support rbnf\n  duration: interpretDuration,\n  date: interpretDateTime,\n  time: interpretDateTime,\n  plural: interpretPlural,\n  selectordinal: interpretPlural,\n  select: interpretSelect\n}\nexports.types = defaults\n\n\n/***/ }),\n\n/***/ \"./node_modules/format-message-interpret/plurals.js\":\n/*!**********************************************************!*\\\n  !*** ./node_modules/format-message-interpret/plurals.js ***!\n  \\**********************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// @flow\n\n\n/*:: export type Rule = 'zero' | 'one' | 'two' | 'few' | 'many' | 'other' */\nvar zero = 'zero', one = 'one', two = 'two', few = 'few', many = 'many', other = 'other'\nvar f = [\n  function (s/*: string | number */)/*: Rule */ {\n    var n = +s\n    return n === 1 ? one\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var n = +s\n    return 0 <= n && n <= 1 ? one\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var i = Math.floor(Math.abs(+s))\n    var n = +s\n    return i === 0 || n === 1 ? one\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var n = +s\n    return n === 0 ? zero\n      : n === 1 ? one\n      : n === 2 ? two\n      : 3 <= n % 100 && n % 100 <= 10 ? few\n      : 11 <= n % 100 && n % 100 <= 99 ? many\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var i = Math.floor(Math.abs(+s))\n    var v = (s + '.').split('.')[1].length\n    return i === 1 && v === 0 ? one\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var n = +s\n    return n % 10 === 1 && n % 100 !== 11 ? one\n      : (2 <= n % 10 && n % 10 <= 4) && (n % 100 < 12 || 14 < n % 100) ? few\n      : n % 10 === 0 || (5 <= n % 10 && n % 10 <= 9) || (11 <= n % 100 && n % 100 <= 14) ? many\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var n = +s\n    return n % 10 === 1 && (n % 100 !== 11 && n % 100 !== 71 && n % 100 !== 91) ? one\n      : n % 10 === 2 && (n % 100 !== 12 && n % 100 !== 72 && n % 100 !== 92) ? two\n      : ((3 <= n % 10 && n % 10 <= 4) || n % 10 === 9) && ((n % 100 < 10 || 19 < n % 100) && (n % 100 < 70 || 79 < n % 100) && (n % 100 < 90 || 99 < n % 100)) ? few\n      : n !== 0 && n % 1000000 === 0 ? many\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var i = Math.floor(Math.abs(+s))\n    var v = (s + '.').split('.')[1].length\n    var f = +(s + '.').split('.')[1]\n    return v === 0 && i % 10 === 1 && i % 100 !== 11 || f % 10 === 1 && f % 100 !== 11 ? one\n      : v === 0 && (2 <= i % 10 && i % 10 <= 4) && (i % 100 < 12 || 14 < i % 100) || (2 <= f % 10 && f % 10 <= 4) && (f % 100 < 12 || 14 < f % 100) ? few\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var i = Math.floor(Math.abs(+s))\n    var v = (s + '.').split('.')[1].length\n    return i === 1 && v === 0 ? one\n      : (2 <= i && i <= 4) && v === 0 ? few\n      : v !== 0 ? many\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var n = +s\n    return n === 0 ? zero\n      : n === 1 ? one\n      : n === 2 ? two\n      : n === 3 ? few\n      : n === 6 ? many\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var i = Math.floor(Math.abs(+s))\n    var t = +('' + s).replace(/^[^.]*.?|0+$/g, '')\n    var n = +s\n    return n === 1 || t !== 0 && (i === 0 || i === 1) ? one\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var i = Math.floor(Math.abs(+s))\n    var v = (s + '.').split('.')[1].length\n    var f = +(s + '.').split('.')[1]\n    return v === 0 && i % 100 === 1 || f % 100 === 1 ? one\n      : v === 0 && i % 100 === 2 || f % 100 === 2 ? two\n      : v === 0 && (3 <= i % 100 && i % 100 <= 4) || (3 <= f % 100 && f % 100 <= 4) ? few\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var i = Math.floor(Math.abs(+s))\n    return i === 0 || i === 1 ? one\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var i = Math.floor(Math.abs(+s))\n    var v = (s + '.').split('.')[1].length\n    var f = +(s + '.').split('.')[1]\n    return v === 0 && (i === 1 || i === 2 || i === 3) || v === 0 && (i % 10 !== 4 && i % 10 !== 6 && i % 10 !== 9) || v !== 0 && (f % 10 !== 4 && f % 10 !== 6 && f % 10 !== 9) ? one\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var n = +s\n    return n === 1 ? one\n      : n === 2 ? two\n      : 3 <= n && n <= 6 ? few\n      : 7 <= n && n <= 10 ? many\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var n = +s\n    return n === 1 || n === 11 ? one\n      : n === 2 || n === 12 ? two\n      : ((3 <= n && n <= 10) || (13 <= n && n <= 19)) ? few\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var i = Math.floor(Math.abs(+s))\n    var v = (s + '.').split('.')[1].length\n    return v === 0 && i % 10 === 1 ? one\n      : v === 0 && i % 10 === 2 ? two\n      : v === 0 && (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80) ? few\n      : v !== 0 ? many\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var i = Math.floor(Math.abs(+s))\n    var v = (s + '.').split('.')[1].length\n    var n = +s\n    return i === 1 && v === 0 ? one\n      : i === 2 && v === 0 ? two\n      : v === 0 && (n < 0 || 10 < n) && n % 10 === 0 ? many\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var i = Math.floor(Math.abs(+s))\n    var t = +('' + s).replace(/^[^.]*.?|0+$/g, '')\n    return t === 0 && i % 10 === 1 && i % 100 !== 11 || t !== 0 ? one\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var n = +s\n    return n === 1 ? one\n      : n === 2 ? two\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var n = +s\n    return n === 0 ? zero\n      : n === 1 ? one\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var i = Math.floor(Math.abs(+s))\n    var n = +s\n    return n === 0 ? zero\n      : (i === 0 || i === 1) && n !== 0 ? one\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var f = +(s + '.').split('.')[1]\n    var n = +s\n    return n % 10 === 1 && (n % 100 < 11 || 19 < n % 100) ? one\n      : (2 <= n % 10 && n % 10 <= 9) && (n % 100 < 11 || 19 < n % 100) ? few\n      : f !== 0 ? many\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var v = (s + '.').split('.')[1].length\n    var f = +(s + '.').split('.')[1]\n    var n = +s\n    return n % 10 === 0 || (11 <= n % 100 && n % 100 <= 19) || v === 2 && (11 <= f % 100 && f % 100 <= 19) ? zero\n      : n % 10 === 1 && n % 100 !== 11 || v === 2 && f % 10 === 1 && f % 100 !== 11 || v !== 2 && f % 10 === 1 ? one\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var i = Math.floor(Math.abs(+s))\n    var v = (s + '.').split('.')[1].length\n    var f = +(s + '.').split('.')[1]\n    return v === 0 && i % 10 === 1 && i % 100 !== 11 || f % 10 === 1 && f % 100 !== 11 ? one\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var i = Math.floor(Math.abs(+s))\n    var v = (s + '.').split('.')[1].length\n    var n = +s\n    return i === 1 && v === 0 ? one\n      : v !== 0 || n === 0 || n !== 1 && (1 <= n % 100 && n % 100 <= 19) ? few\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var n = +s\n    return n === 1 ? one\n      : n === 0 || (2 <= n % 100 && n % 100 <= 10) ? few\n      : 11 <= n % 100 && n % 100 <= 19 ? many\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var i = Math.floor(Math.abs(+s))\n    var v = (s + '.').split('.')[1].length\n    return i === 1 && v === 0 ? one\n      : v === 0 && (2 <= i % 10 && i % 10 <= 4) && (i % 100 < 12 || 14 < i % 100) ? few\n      : v === 0 && i !== 1 && (0 <= i % 10 && i % 10 <= 1) || v === 0 && (5 <= i % 10 && i % 10 <= 9) || v === 0 && (12 <= i % 100 && i % 100 <= 14) ? many\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var i = Math.floor(Math.abs(+s))\n    return 0 <= i && i <= 1 ? one\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var i = Math.floor(Math.abs(+s))\n    var v = (s + '.').split('.')[1].length\n    return v === 0 && i % 10 === 1 && i % 100 !== 11 ? one\n      : v === 0 && (2 <= i % 10 && i % 10 <= 4) && (i % 100 < 12 || 14 < i % 100) ? few\n      : v === 0 && i % 10 === 0 || v === 0 && (5 <= i % 10 && i % 10 <= 9) || v === 0 && (11 <= i % 100 && i % 100 <= 14) ? many\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var i = Math.floor(Math.abs(+s))\n    var n = +s\n    return i === 0 || n === 1 ? one\n      : 2 <= n && n <= 10 ? few\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var i = Math.floor(Math.abs(+s))\n    var f = +(s + '.').split('.')[1]\n    var n = +s\n    return (n === 0 || n === 1) || i === 0 && f === 1 ? one\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var i = Math.floor(Math.abs(+s))\n    var v = (s + '.').split('.')[1].length\n    return v === 0 && i % 100 === 1 ? one\n      : v === 0 && i % 100 === 2 ? two\n      : v === 0 && (3 <= i % 100 && i % 100 <= 4) || v !== 0 ? few\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var n = +s\n    return (0 <= n && n <= 1) || (11 <= n && n <= 99) ? one\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var n = +s\n    return n === 1 || n === 5 || n === 7 || n === 8 || n === 9 || n === 10 ? one\n      : n === 2 || n === 3 ? two\n      : n === 4 ? few\n      : n === 6 ? many\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var i = Math.floor(Math.abs(+s))\n    return (i % 10 === 1 || i % 10 === 2 || i % 10 === 5 || i % 10 === 7 || i % 10 === 8) || (i % 100 === 20 || i % 100 === 50 || i % 100 === 70 || i % 100 === 80) ? one\n      : (i % 10 === 3 || i % 10 === 4) || (i % 1000 === 100 || i % 1000 === 200 || i % 1000 === 300 || i % 1000 === 400 || i % 1000 === 500 || i % 1000 === 600 || i % 1000 === 700 || i % 1000 === 800 || i % 1000 === 900) ? few\n      : i === 0 || i % 10 === 6 || (i % 100 === 40 || i % 100 === 60 || i % 100 === 90) ? many\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var n = +s\n    return (n % 10 === 2 || n % 10 === 3) && (n % 100 !== 12 && n % 100 !== 13) ? few\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var n = +s\n    return n === 1 || n === 3 ? one\n      : n === 2 ? two\n      : n === 4 ? few\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var n = +s\n    return n === 0 || n === 7 || n === 8 || n === 9 ? zero\n      : n === 1 ? one\n      : n === 2 ? two\n      : n === 3 || n === 4 ? few\n      : n === 5 || n === 6 ? many\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var n = +s\n    return n % 10 === 1 && n % 100 !== 11 ? one\n      : n % 10 === 2 && n % 100 !== 12 ? two\n      : n % 10 === 3 && n % 100 !== 13 ? few\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var n = +s\n    return n === 1 || n === 11 ? one\n      : n === 2 || n === 12 ? two\n      : n === 3 || n === 13 ? few\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var n = +s\n    return n === 1 ? one\n      : n === 2 || n === 3 ? two\n      : n === 4 ? few\n      : n === 6 ? many\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var n = +s\n    return n === 1 || n === 5 ? one\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var n = +s\n    return n === 11 || n === 8 || n === 80 || n === 800 ? many\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var i = Math.floor(Math.abs(+s))\n    return i === 1 ? one\n      : i === 0 || ((2 <= i % 100 && i % 100 <= 20) || i % 100 === 40 || i % 100 === 60 || i % 100 === 80) ? many\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var n = +s\n    return n % 10 === 6 || n % 10 === 9 || n % 10 === 0 && n !== 0 ? many\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var i = Math.floor(Math.abs(+s))\n    return i % 10 === 1 && i % 100 !== 11 ? one\n      : i % 10 === 2 && i % 100 !== 12 ? two\n      : (i % 10 === 7 || i % 10 === 8) && (i % 100 !== 17 && i % 100 !== 18) ? many\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var n = +s\n    return n === 1 ? one\n      : n === 2 || n === 3 ? two\n      : n === 4 ? few\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var n = +s\n    return 1 <= n && n <= 4 ? one\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var n = +s\n    return (n === 1 || n === 5 || (7 <= n && n <= 9)) ? one\n      : n === 2 || n === 3 ? two\n      : n === 4 ? few\n      : n === 6 ? many\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var n = +s\n    return n === 1 ? one\n      : n % 10 === 4 && n % 100 !== 14 ? many\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var n = +s\n    return (n % 10 === 1 || n % 10 === 2) && (n % 100 !== 11 && n % 100 !== 12) ? one\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var n = +s\n    return (n % 10 === 6 || n % 10 === 9) || n === 10 ? few\n      : other\n  },\n  function (s/*: string | number */)/*: Rule */ {\n    var n = +s\n    return n % 10 === 3 && n % 100 !== 13 ? few\n      : other\n  }\n]\n\nmodule.exports = {\n  af: { cardinal: f[0] },\n  ak: { cardinal: f[1] },\n  am: { cardinal: f[2] },\n  ar: { cardinal: f[3] },\n  ars: { cardinal: f[3] },\n  as: { cardinal: f[2], ordinal: f[34] },\n  asa: { cardinal: f[0] },\n  ast: { cardinal: f[4] },\n  az: { cardinal: f[0], ordinal: f[35] },\n  be: { cardinal: f[5], ordinal: f[36] },\n  bem: { cardinal: f[0] },\n  bez: { cardinal: f[0] },\n  bg: { cardinal: f[0] },\n  bh: { cardinal: f[1] },\n  bn: { cardinal: f[2], ordinal: f[34] },\n  br: { cardinal: f[6] },\n  brx: { cardinal: f[0] },\n  bs: { cardinal: f[7] },\n  ca: { cardinal: f[4], ordinal: f[37] },\n  ce: { cardinal: f[0] },\n  cgg: { cardinal: f[0] },\n  chr: { cardinal: f[0] },\n  ckb: { cardinal: f[0] },\n  cs: { cardinal: f[8] },\n  cy: { cardinal: f[9], ordinal: f[38] },\n  da: { cardinal: f[10] },\n  de: { cardinal: f[4] },\n  dsb: { cardinal: f[11] },\n  dv: { cardinal: f[0] },\n  ee: { cardinal: f[0] },\n  el: { cardinal: f[0] },\n  en: { cardinal: f[4], ordinal: f[39] },\n  eo: { cardinal: f[0] },\n  es: { cardinal: f[0] },\n  et: { cardinal: f[4] },\n  eu: { cardinal: f[0] },\n  fa: { cardinal: f[2] },\n  ff: { cardinal: f[12] },\n  fi: { cardinal: f[4] },\n  fil: { cardinal: f[13], ordinal: f[0] },\n  fo: { cardinal: f[0] },\n  fr: { cardinal: f[12], ordinal: f[0] },\n  fur: { cardinal: f[0] },\n  fy: { cardinal: f[4] },\n  ga: { cardinal: f[14], ordinal: f[0] },\n  gd: { cardinal: f[15], ordinal: f[40] },\n  gl: { cardinal: f[4] },\n  gsw: { cardinal: f[0] },\n  gu: { cardinal: f[2], ordinal: f[41] },\n  guw: { cardinal: f[1] },\n  gv: { cardinal: f[16] },\n  ha: { cardinal: f[0] },\n  haw: { cardinal: f[0] },\n  he: { cardinal: f[17] },\n  hi: { cardinal: f[2], ordinal: f[41] },\n  hr: { cardinal: f[7] },\n  hsb: { cardinal: f[11] },\n  hu: { cardinal: f[0], ordinal: f[42] },\n  hy: { cardinal: f[12], ordinal: f[0] },\n  ia: { cardinal: f[4] },\n  io: { cardinal: f[4] },\n  is: { cardinal: f[18] },\n  it: { cardinal: f[4], ordinal: f[43] },\n  iu: { cardinal: f[19] },\n  iw: { cardinal: f[17] },\n  jgo: { cardinal: f[0] },\n  ji: { cardinal: f[4] },\n  jmc: { cardinal: f[0] },\n  ka: { cardinal: f[0], ordinal: f[44] },\n  kab: { cardinal: f[12] },\n  kaj: { cardinal: f[0] },\n  kcg: { cardinal: f[0] },\n  kk: { cardinal: f[0], ordinal: f[45] },\n  kkj: { cardinal: f[0] },\n  kl: { cardinal: f[0] },\n  kn: { cardinal: f[2] },\n  ks: { cardinal: f[0] },\n  ksb: { cardinal: f[0] },\n  ksh: { cardinal: f[20] },\n  ku: { cardinal: f[0] },\n  kw: { cardinal: f[19] },\n  ky: { cardinal: f[0] },\n  lag: { cardinal: f[21] },\n  lb: { cardinal: f[0] },\n  lg: { cardinal: f[0] },\n  ln: { cardinal: f[1] },\n  lt: { cardinal: f[22] },\n  lv: { cardinal: f[23] },\n  mas: { cardinal: f[0] },\n  mg: { cardinal: f[1] },\n  mgo: { cardinal: f[0] },\n  mk: { cardinal: f[24], ordinal: f[46] },\n  ml: { cardinal: f[0] },\n  mn: { cardinal: f[0] },\n  mo: { cardinal: f[25], ordinal: f[0] },\n  mr: { cardinal: f[2], ordinal: f[47] },\n  mt: { cardinal: f[26] },\n  nah: { cardinal: f[0] },\n  naq: { cardinal: f[19] },\n  nb: { cardinal: f[0] },\n  nd: { cardinal: f[0] },\n  ne: { cardinal: f[0], ordinal: f[48] },\n  nl: { cardinal: f[4] },\n  nn: { cardinal: f[0] },\n  nnh: { cardinal: f[0] },\n  no: { cardinal: f[0] },\n  nr: { cardinal: f[0] },\n  nso: { cardinal: f[1] },\n  ny: { cardinal: f[0] },\n  nyn: { cardinal: f[0] },\n  om: { cardinal: f[0] },\n  or: { cardinal: f[0], ordinal: f[49] },\n  os: { cardinal: f[0] },\n  pa: { cardinal: f[1] },\n  pap: { cardinal: f[0] },\n  pl: { cardinal: f[27] },\n  prg: { cardinal: f[23] },\n  ps: { cardinal: f[0] },\n  pt: { cardinal: f[28] },\n  'pt-PT': { cardinal: f[4] },\n  rm: { cardinal: f[0] },\n  ro: { cardinal: f[25], ordinal: f[0] },\n  rof: { cardinal: f[0] },\n  ru: { cardinal: f[29] },\n  rwk: { cardinal: f[0] },\n  saq: { cardinal: f[0] },\n  sc: { cardinal: f[4], ordinal: f[43] },\n  scn: { cardinal: f[4], ordinal: f[43] },\n  sd: { cardinal: f[0] },\n  sdh: { cardinal: f[0] },\n  se: { cardinal: f[19] },\n  seh: { cardinal: f[0] },\n  sh: { cardinal: f[7] },\n  shi: { cardinal: f[30] },\n  si: { cardinal: f[31] },\n  sk: { cardinal: f[8] },\n  sl: { cardinal: f[32] },\n  sma: { cardinal: f[19] },\n  smi: { cardinal: f[19] },\n  smj: { cardinal: f[19] },\n  smn: { cardinal: f[19] },\n  sms: { cardinal: f[19] },\n  sn: { cardinal: f[0] },\n  so: { cardinal: f[0] },\n  sq: { cardinal: f[0], ordinal: f[50] },\n  sr: { cardinal: f[7] },\n  ss: { cardinal: f[0] },\n  ssy: { cardinal: f[0] },\n  st: { cardinal: f[0] },\n  sv: { cardinal: f[4], ordinal: f[51] },\n  sw: { cardinal: f[4] },\n  syr: { cardinal: f[0] },\n  ta: { cardinal: f[0] },\n  te: { cardinal: f[0] },\n  teo: { cardinal: f[0] },\n  ti: { cardinal: f[1] },\n  tig: { cardinal: f[0] },\n  tk: { cardinal: f[0], ordinal: f[52] },\n  tl: { cardinal: f[13], ordinal: f[0] },\n  tn: { cardinal: f[0] },\n  tr: { cardinal: f[0] },\n  ts: { cardinal: f[0] },\n  tzm: { cardinal: f[33] },\n  ug: { cardinal: f[0] },\n  uk: { cardinal: f[29], ordinal: f[53] },\n  ur: { cardinal: f[4] },\n  uz: { cardinal: f[0] },\n  ve: { cardinal: f[0] },\n  vo: { cardinal: f[0] },\n  vun: { cardinal: f[0] },\n  wa: { cardinal: f[1] },\n  wae: { cardinal: f[0] },\n  xh: { cardinal: f[0] },\n  xog: { cardinal: f[0] },\n  yi: { cardinal: f[4] },\n  zu: { cardinal: f[2] },\n  lo: { ordinal: f[0] },\n  ms: { ordinal: f[0] },\n  vi: { ordinal: f[0] }\n}\n\n\n/***/ }),\n\n/***/ \"./node_modules/format-message-parse/index.js\":\n/*!****************************************************!*\\\n  !*** ./node_modules/format-message-parse/index.js ***!\n  \\****************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// @flow\n\n\n/*::\nexport type AST = Element[]\nexport type Element = string | Placeholder\nexport type Placeholder = Plural | Styled | Typed | Simple\nexport type Plural = [ string, 'plural' | 'selectordinal', number, SubMessages ]\nexport type Styled = [ string, string, string | SubMessages ]\nexport type Typed = [ string, string ]\nexport type Simple = [ string ]\nexport type SubMessages = { [string]: AST }\nexport type Token = [ TokenType, string ]\nexport type TokenType = 'text' | 'space' | 'id' | 'type' | 'style' | 'offset' | 'number' | 'selector' | 'syntax'\ntype Context = {|\n  pattern: string,\n  index: number,\n  tagsType: ?string,\n  tokens: ?Token[]\n|}\n*/\n\nvar ARG_OPN = '{'\nvar ARG_CLS = '}'\nvar ARG_SEP = ','\nvar NUM_ARG = '#'\nvar TAG_OPN = '<'\nvar TAG_CLS = '>'\nvar TAG_END = '</'\nvar TAG_SELF_CLS = '/>'\nvar ESC = '\\''\nvar OFFSET = 'offset:'\nvar simpleTypes = [\n  'number',\n  'date',\n  'time',\n  'ordinal',\n  'duration',\n  'spellout'\n]\nvar submTypes = [\n  'plural',\n  'select',\n  'selectordinal'\n]\n\n/**\n * parse\n *\n * Turns this:\n *  `You have { numBananas, plural,\n *       =0 {no bananas}\n *      one {a banana}\n *    other {# bananas}\n *  } for sale`\n *\n * into this:\n *  [ \"You have \", [ \"numBananas\", \"plural\", 0, {\n *       \"=0\": [ \"no bananas\" ],\n *      \"one\": [ \"a banana\" ],\n *    \"other\": [ [ '#' ], \" bananas\" ]\n *  } ], \" for sale.\" ]\n *\n * tokens:\n *  [\n *    [ \"text\", \"You have \" ],\n *    [ \"syntax\", \"{\" ],\n *    [ \"space\", \" \" ],\n *    [ \"id\", \"numBananas\" ],\n *    [ \"syntax\", \", \" ],\n *    [ \"space\", \" \" ],\n *    [ \"type\", \"plural\" ],\n *    [ \"syntax\", \",\" ],\n *    [ \"space\", \"\\n     \" ],\n *    [ \"selector\", \"=0\" ],\n *    [ \"space\", \" \" ],\n *    [ \"syntax\", \"{\" ],\n *    [ \"text\", \"no bananas\" ],\n *    [ \"syntax\", \"}\" ],\n *    [ \"space\", \"\\n    \" ],\n *    [ \"selector\", \"one\" ],\n *    [ \"space\", \" \" ],\n *    [ \"syntax\", \"{\" ],\n *    [ \"text\", \"a banana\" ],\n *    [ \"syntax\", \"}\" ],\n *    [ \"space\", \"\\n  \" ],\n *    [ \"selector\", \"other\" ],\n *    [ \"space\", \" \" ],\n *    [ \"syntax\", \"{\" ],\n *    [ \"syntax\", \"#\" ],\n *    [ \"text\", \" bananas\" ],\n *    [ \"syntax\", \"}\" ],\n *    [ \"space\", \"\\n\" ],\n *    [ \"syntax\", \"}\" ],\n *    [ \"text\", \" for sale.\" ]\n *  ]\n **/\nexports = module.exports = function parse (\n  pattern/*: string */,\n  options/*:: ?: { tagsType?: string, tokens?: Token[] } */\n)/*: AST */ {\n  return parseAST({\n    pattern: String(pattern),\n    index: 0,\n    tagsType: (options && options.tagsType) || null,\n    tokens: (options && options.tokens) || null\n  }, '')\n}\n\nfunction parseAST (current/*: Context */, parentType/*: string */)/*: AST */ {\n  var pattern = current.pattern\n  var length = pattern.length\n  var elements/*: AST */ = []\n  var start = current.index\n  var text = parseText(current, parentType)\n  if (text) elements.push(text)\n  if (text && current.tokens) current.tokens.push(['text', pattern.slice(start, current.index)])\n  while (current.index < length) {\n    if (pattern[current.index] === ARG_CLS) {\n      if (!parentType) throw expected(current)\n      break\n    }\n    if (parentType && current.tagsType && pattern.slice(current.index, current.index + TAG_END.length) === TAG_END) break\n    elements.push(parsePlaceholder(current))\n    start = current.index\n    text = parseText(current, parentType)\n    if (text) elements.push(text)\n    if (text && current.tokens) current.tokens.push(['text', pattern.slice(start, current.index)])\n  }\n  return elements\n}\n\nfunction parseText (current/*: Context */, parentType/*: string */)/*: string */ {\n  var pattern = current.pattern\n  var length = pattern.length\n  var isHashSpecial = (parentType === 'plural' || parentType === 'selectordinal')\n  var isAngleSpecial = !!current.tagsType\n  var isArgStyle = (parentType === '{style}')\n  var text = ''\n  while (current.index < length) {\n    var char = pattern[current.index]\n    if (\n      char === ARG_OPN || char === ARG_CLS ||\n      (isHashSpecial && char === NUM_ARG) ||\n      (isAngleSpecial && char === TAG_OPN) ||\n      (isArgStyle && isWhitespace(char.charCodeAt(0)))\n    ) {\n      break\n    } else if (char === ESC) {\n      char = pattern[++current.index]\n      if (char === ESC) { // double is always 1 '\n        text += char\n        ++current.index\n      } else if (\n        // only when necessary\n        char === ARG_OPN || char === ARG_CLS ||\n        (isHashSpecial && char === NUM_ARG) ||\n        (isAngleSpecial && char === TAG_OPN) ||\n        isArgStyle\n      ) {\n        text += char\n        while (++current.index < length) {\n          char = pattern[current.index]\n          if (char === ESC && pattern[current.index + 1] === ESC) { // double is always 1 '\n            text += ESC\n            ++current.index\n          } else if (char === ESC) { // end of quoted\n            ++current.index\n            break\n          } else {\n            text += char\n          }\n        }\n      } else { // lone ' is just a '\n        text += ESC\n        // already incremented\n      }\n    } else {\n      text += char\n      ++current.index\n    }\n  }\n  return text\n}\n\nfunction isWhitespace (code/*: number */)/*: boolean */ {\n  return (\n    (code >= 0x09 && code <= 0x0D) ||\n    code === 0x20 || code === 0x85 || code === 0xA0 || code === 0x180E ||\n    (code >= 0x2000 && code <= 0x200D) ||\n    code === 0x2028 || code === 0x2029 || code === 0x202F || code === 0x205F ||\n    code === 0x2060 || code === 0x3000 || code === 0xFEFF\n  )\n}\n\nfunction skipWhitespace (current/*: Context */)/*: void */ {\n  var pattern = current.pattern\n  var length = pattern.length\n  var start = current.index\n  while (current.index < length && isWhitespace(pattern.charCodeAt(current.index))) {\n    ++current.index\n  }\n  if (start < current.index && current.tokens) {\n    current.tokens.push(['space', current.pattern.slice(start, current.index)])\n  }\n}\n\nfunction parsePlaceholder (current/*: Context */)/*: Placeholder */ {\n  var pattern = current.pattern\n  if (pattern[current.index] === NUM_ARG) {\n    if (current.tokens) current.tokens.push(['syntax', NUM_ARG])\n    ++current.index // move passed #\n    return [NUM_ARG]\n  }\n\n  var tag = parseTag(current)\n  if (tag) return tag\n\n  /* istanbul ignore if should be unreachable if parseAST and parseText are right */\n  if (pattern[current.index] !== ARG_OPN) throw expected(current, ARG_OPN)\n  if (current.tokens) current.tokens.push(['syntax', ARG_OPN])\n  ++current.index // move passed {\n  skipWhitespace(current)\n\n  var id = parseId(current)\n  if (!id) throw expected(current, 'placeholder id')\n  if (current.tokens) current.tokens.push(['id', id])\n  skipWhitespace(current)\n\n  var char = pattern[current.index]\n  if (char === ARG_CLS) { // end placeholder\n    if (current.tokens) current.tokens.push(['syntax', ARG_CLS])\n    ++current.index // move passed }\n    return [id]\n  }\n\n  if (char !== ARG_SEP) throw expected(current, ARG_SEP + ' or ' + ARG_CLS)\n  if (current.tokens) current.tokens.push(['syntax', ARG_SEP])\n  ++current.index // move passed ,\n  skipWhitespace(current)\n\n  var type = parseId(current)\n  if (!type) throw expected(current, 'placeholder type')\n  if (current.tokens) current.tokens.push(['type', type])\n  skipWhitespace(current)\n  char = pattern[current.index]\n  if (char === ARG_CLS) { // end placeholder\n    if (current.tokens) current.tokens.push(['syntax', ARG_CLS])\n    if (type === 'plural' || type === 'selectordinal' || type === 'select') {\n      throw expected(current, type + ' sub-messages')\n    }\n    ++current.index // move passed }\n    return [id, type]\n  }\n\n  if (char !== ARG_SEP) throw expected(current, ARG_SEP + ' or ' + ARG_CLS)\n  if (current.tokens) current.tokens.push(['syntax', ARG_SEP])\n  ++current.index // move passed ,\n  skipWhitespace(current)\n\n  var arg\n  if (type === 'plural' || type === 'selectordinal') {\n    var offset = parsePluralOffset(current)\n    skipWhitespace(current)\n    arg = [id, type, offset, parseSubMessages(current, type)]\n  } else if (type === 'select') {\n    arg = [id, type, parseSubMessages(current, type)]\n  } else if (simpleTypes.indexOf(type) >= 0) {\n    arg = [id, type, parseSimpleFormat(current)]\n  } else { // custom placeholder type\n    var index = current.index\n    var format/*: string | SubMessages */ = parseSimpleFormat(current)\n    skipWhitespace(current)\n    if (pattern[current.index] === ARG_OPN) {\n      current.index = index // rewind, since should have been submessages\n      format = parseSubMessages(current, type)\n    }\n    arg = [id, type, format]\n  }\n\n  skipWhitespace(current)\n  if (pattern[current.index] !== ARG_CLS) throw expected(current, ARG_CLS)\n  if (current.tokens) current.tokens.push(['syntax', ARG_CLS])\n  ++current.index // move passed }\n  return arg\n}\n\nfunction parseTag (current/*: Context */)/*: ?Placeholder */ {\n  var tagsType = current.tagsType\n  if (!tagsType || current.pattern[current.index] !== TAG_OPN) return\n\n  if (current.pattern.slice(current.index, current.index + TAG_END.length) === TAG_END) {\n    throw expected(current, null, 'closing tag without matching opening tag')\n  }\n  if (current.tokens) current.tokens.push(['syntax', TAG_OPN])\n  ++current.index // move passed <\n\n  var id = parseId(current, true)\n  if (!id) throw expected(current, 'placeholder id')\n  if (current.tokens) current.tokens.push(['id', id])\n  skipWhitespace(current)\n\n  if (current.pattern.slice(current.index, current.index + TAG_SELF_CLS.length) === TAG_SELF_CLS) {\n    if (current.tokens) current.tokens.push(['syntax', TAG_SELF_CLS])\n    current.index += TAG_SELF_CLS.length\n    return [id, tagsType]\n  }\n  if (current.pattern[current.index] !== TAG_CLS) throw expected(current, TAG_CLS)\n  if (current.tokens) current.tokens.push(['syntax', TAG_CLS])\n  ++current.index // move passed >\n\n  var children = parseAST(current, tagsType)\n\n  var end = current.index\n  if (current.pattern.slice(current.index, current.index + TAG_END.length) !== TAG_END) throw expected(current, TAG_END + id + TAG_CLS)\n  if (current.tokens) current.tokens.push(['syntax', TAG_END])\n  current.index += TAG_END.length\n  var closeId = parseId(current, true)\n  if (closeId && current.tokens) current.tokens.push(['id', closeId])\n  if (id !== closeId) {\n    current.index = end // rewind for better error message\n    throw expected(current, TAG_END + id + TAG_CLS, TAG_END + closeId + TAG_CLS)\n  }\n  skipWhitespace(current)\n  if (current.pattern[current.index] !== TAG_CLS) throw expected(current, TAG_CLS)\n  if (current.tokens) current.tokens.push(['syntax', TAG_CLS])\n  ++current.index // move passed >\n\n  return [id, tagsType, { children: children }]\n}\n\nfunction parseId (current/*: Context */, isTag/*:: ?: boolean */)/*: string */ {\n  var pattern = current.pattern\n  var length = pattern.length\n  var id = ''\n  while (current.index < length) {\n    var char = pattern[current.index]\n    if (\n      char === ARG_OPN || char === ARG_CLS || char === ARG_SEP ||\n      char === NUM_ARG || char === ESC || isWhitespace(char.charCodeAt(0)) ||\n      (isTag && (char === TAG_OPN || char === TAG_CLS || char === '/'))\n    ) break\n    id += char\n    ++current.index\n  }\n  return id\n}\n\nfunction parseSimpleFormat (current/*: Context */)/*: string */ {\n  var start = current.index\n  var style = parseText(current, '{style}')\n  if (!style) throw expected(current, 'placeholder style name')\n  if (current.tokens) current.tokens.push(['style', current.pattern.slice(start, current.index)])\n  return style\n}\n\nfunction parsePluralOffset (current/*: Context */)/*: number */ {\n  var pattern = current.pattern\n  var length = pattern.length\n  var offset = 0\n  if (pattern.slice(current.index, current.index + OFFSET.length) === OFFSET) {\n    if (current.tokens) current.tokens.push(['offset', 'offset'], ['syntax', ':'])\n    current.index += OFFSET.length // move passed offset:\n    skipWhitespace(current)\n    var start = current.index\n    while (current.index < length && isDigit(pattern.charCodeAt(current.index))) {\n      ++current.index\n    }\n    if (start === current.index) throw expected(current, 'offset number')\n    if (current.tokens) current.tokens.push(['number', pattern.slice(start, current.index)])\n    offset = +pattern.slice(start, current.index)\n  }\n  return offset\n}\n\nfunction isDigit (code/*: number */)/*: boolean */ {\n  return (code >= 0x30 && code <= 0x39)\n}\n\nfunction parseSubMessages (current/*: Context */, parentType/*: string */)/*: SubMessages */ {\n  var pattern = current.pattern\n  var length = pattern.length\n  var options/*: SubMessages */ = {}\n  while (current.index < length && pattern[current.index] !== ARG_CLS) {\n    var selector = parseId(current)\n    if (!selector) throw expected(current, 'sub-message selector')\n    if (current.tokens) current.tokens.push(['selector', selector])\n    skipWhitespace(current)\n    options[selector] = parseSubMessage(current, parentType)\n    skipWhitespace(current)\n  }\n  if (!options.other && submTypes.indexOf(parentType) >= 0) {\n    throw expected(current, null, null, '\"other\" sub-message must be specified in ' + parentType)\n  }\n  return options\n}\n\nfunction parseSubMessage (current/*: Context */, parentType/*: string */)/*: AST */ {\n  if (current.pattern[current.index] !== ARG_OPN) throw expected(current, ARG_OPN + ' to start sub-message')\n  if (current.tokens) current.tokens.push(['syntax', ARG_OPN])\n  ++current.index // move passed {\n  var message = parseAST(current, parentType)\n  if (current.pattern[current.index] !== ARG_CLS) throw expected(current, ARG_CLS + ' to end sub-message')\n  if (current.tokens) current.tokens.push(['syntax', ARG_CLS])\n  ++current.index // move passed }\n  return message\n}\n\nfunction expected (current/*: Context */, expected/*:: ?: ?string */, found/*:: ?: ?string */, message/*:: ?: string */) {\n  var pattern = current.pattern\n  var lines = pattern.slice(0, current.index).split(/\\r?\\n/)\n  var offset = current.index\n  var line = lines.length\n  var column = lines.slice(-1)[0].length\n  found = found || (\n    (current.index >= pattern.length) ? 'end of message pattern'\n      : (parseId(current) || pattern[current.index])\n  )\n  if (!message) message = errorMessage(expected, found)\n  message += ' in ' + pattern.replace(/\\r?\\n/g, '\\n')\n  return new SyntaxError(message, expected, found, offset, line, column)\n}\n\nfunction errorMessage (expected/*: ?string */, found/* string */) {\n  if (!expected) return 'Unexpected ' + found + ' found'\n  return 'Expected ' + expected + ' but found ' + found\n}\n\n/**\n * SyntaxError\n *  Holds information about bad syntax found in a message pattern\n **/\nfunction SyntaxError (message/*: string */, expected/*: ?string */, found/*: ?string */, offset/*: number */, line/*: number */, column/*: number */) {\n  Error.call(this, message)\n  this.name = 'SyntaxError'\n  this.message = message\n  this.expected = expected\n  this.found = found\n  this.offset = offset\n  this.line = line\n  this.column = column\n}\nSyntaxError.prototype = Object.create(Error.prototype)\nexports.SyntaxError = SyntaxError\n\n\n/***/ }),\n\n/***/ \"./node_modules/format-message/index.js\":\n/*!**********************************************!*\\\n  !*** ./node_modules/format-message/index.js ***!\n  \\**********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// @flow\n\nvar parse = __webpack_require__(/*! format-message-parse */ \"./node_modules/format-message-parse/index.js\")\nvar interpret = __webpack_require__(/*! format-message-interpret */ \"./node_modules/format-message-interpret/index.js\")\nvar plurals = __webpack_require__(/*! format-message-interpret/plurals */ \"./node_modules/format-message-interpret/plurals.js\")\nvar lookupClosestLocale = __webpack_require__(/*! lookup-closest-locale */ \"./node_modules/lookup-closest-locale/index.js\")\nvar origFormats = __webpack_require__(/*! format-message-formats */ \"./node_modules/format-message-formats/index.js\")\n\n/*::\nimport type { Types } from 'format-message-interpret'\ntype Locale = string\ntype Locales = Locale | Locale[]\ntype Message = string | {|\n  id?: string,\n  default: string,\n  description?: string\n|}\ntype Translations = { [string]: ?{ [string]: string | Translation } }\ntype Translation = {\n  message: string,\n  format?: (args?: Object) => string,\n  toParts?: (args?: Object) => any[],\n}\ntype Replacement = ?string | (string, string, locales?: Locales) => ?string\ntype GenerateId = (string) => string\ntype MissingTranslation = 'ignore' | 'warning' | 'error'\ntype FormatObject = { [string]: * }\ntype Options = {\n  locale?: Locales,\n  translations?: ?Translations,\n  generateId?: GenerateId,\n  missingReplacement?: Replacement,\n  missingTranslation?: MissingTranslation,\n  formats?: {\n    number?: FormatObject,\n    date?: FormatObject,\n    time?: FormatObject\n  },\n  types?: Types\n}\ntype Setup = {|\n  locale: Locales,\n  translations: Translations,\n  generateId: GenerateId,\n  missingReplacement: Replacement,\n  missingTranslation: MissingTranslation,\n  formats: {\n    number: FormatObject,\n    date: FormatObject,\n    time: FormatObject\n  },\n  types: Types\n|}\ntype FormatMessage = {\n  (msg: Message, args?: Object, locales?: Locales): string,\n  rich (msg: Message, args?: Object, locales?: Locales): any[],\n  setup (opt?: Options): Setup,\n  number (value: number, style?: string, locales?: Locales): string,\n  date (value: number | Date, style?: string, locales?: Locales): string,\n  time (value: number | Date, style?: string, locales?: Locales): string,\n  select (value: any, options: Object): any,\n  custom (placeholder: any[], locales: Locales, value: any, args: Object): any,\n  plural (value: number, offset: any, options: any, locale: any): any,\n  selectordinal (value: number, offset: any, options: any, locale: any): any,\n  namespace (): FormatMessage\n}\n*/\n\nfunction assign/*:: <T: Object> */ (target/*: T */, source/*: Object */) {\n  Object.keys(source).forEach(function (key) { target[key] = source[key] })\n  return target\n}\n\nfunction namespace ()/*: FormatMessage */ {\n  var formats = assign({}, origFormats)\n  var currentLocales/*: Locales */ = 'en'\n  var translations/*: Translations */ = {}\n  var generateId/*: GenerateId */ = function (pattern) { return pattern }\n  var missingReplacement/*: Replacement */ = null\n  var missingTranslation/*: MissingTranslation */ = 'warning'\n  var types/*: Types */ = {}\n\n  function formatMessage (msg/*: Message */, args/*:: ?: Object */, locales/*:: ?: Locales */) {\n    var pattern = typeof msg === 'string' ? msg : msg.default\n    var id = (typeof msg === 'object' && msg.id) || generateId(pattern)\n    var translated = translate(pattern, id, locales || currentLocales)\n    var format = translated.format || (\n      translated.format = interpret(parse(translated.message), locales || currentLocales, types)\n    )\n    return format(args)\n  }\n\n  formatMessage.rich = function rich (msg/*: Message */, args/*:: ?: Object */, locales/*:: ?: Locales */) {\n    var pattern = typeof msg === 'string' ? msg : msg.default\n    var id = (typeof msg === 'object' && msg.id) || generateId(pattern)\n    var translated = translate(pattern, id, locales || currentLocales)\n    var format = translated.toParts || (\n      translated.toParts = interpret.toParts(parse(translated.message, { tagsType: tagsType }), locales || currentLocales, types)\n    )\n    return format(args)\n  }\n\n  var tagsType = '<>'\n  function richType (node/*: any[] */, locales/*: Locales */) {\n    var style = node[2]\n    return function (fn, args) {\n      var props = typeof style === 'object' ? mapObject(style, args) : style\n      return typeof fn === 'function' ? fn(props) : fn\n    }\n  }\n  types[tagsType] = richType\n\n  function mapObject (object/* { [string]: (args?: Object) => any } */, args/*: ?Object */) {\n    return Object.keys(object).reduce(function (mapped, key) {\n      mapped[key] = object[key](args)\n      return mapped\n    }, {})\n  }\n\n  function translate (pattern/*: string */, id/*: string */, locales/*: Locales */)/*: Translation */ {\n    var locale = lookupClosestLocale(locales, translations) || 'en'\n    var messages = translations[locale] || (translations[locale] = {})\n    var translated = messages[id]\n    if (typeof translated === 'string') {\n      translated = messages[id] = { message: translated }\n    }\n    if (!translated) {\n      var message = 'Translation for \"' + id + '\" in \"' + locale + '\" is missing'\n      if (missingTranslation === 'warning') {\n        /* istanbul ignore else */\n        if (typeof console !== 'undefined') console.warn(message)\n      } else if (missingTranslation !== 'ignore') { // 'error'\n        throw new Error(message)\n      }\n      var replacement = typeof missingReplacement === 'function'\n        ? missingReplacement(pattern, id, locale) || pattern\n        : missingReplacement || pattern\n      translated = messages[id] = { message: replacement }\n    }\n    return translated\n  }\n\n  formatMessage.setup = function setup (opt/*:: ?: Options */) {\n    opt = opt || {}\n    if (opt.locale) currentLocales = opt.locale\n    if ('translations' in opt) translations = opt.translations || {}\n    if (opt.generateId) generateId = opt.generateId\n    if ('missingReplacement' in opt) missingReplacement = opt.missingReplacement\n    if (opt.missingTranslation) missingTranslation = opt.missingTranslation\n    if (opt.formats) {\n      if (opt.formats.number) assign(formats.number, opt.formats.number)\n      if (opt.formats.date) assign(formats.date, opt.formats.date)\n      if (opt.formats.time) assign(formats.time, opt.formats.time)\n    }\n    if (opt.types) {\n      types = opt.types\n      types[tagsType] = richType\n    }\n    return {\n      locale: currentLocales,\n      translations: translations,\n      generateId: generateId,\n      missingReplacement: missingReplacement,\n      missingTranslation: missingTranslation,\n      formats: formats,\n      types: types\n    }\n  }\n\n  formatMessage.number = function (value/*: number */, style/*:: ?: string */, locales/*:: ?: Locales */) {\n    var options = (style && formats.number[style]) ||\n      formats.parseNumberPattern(style) ||\n      formats.number.default\n    return new Intl.NumberFormat(locales || currentLocales, options).format(value)\n  }\n\n  formatMessage.date = function (value/*:: ?: number | Date */, style/*:: ?: string */, locales/*:: ?: Locales */) {\n    var options = (style && formats.date[style]) ||\n      formats.parseDatePattern(style) ||\n      formats.date.default\n    return new Intl.DateTimeFormat(locales || currentLocales, options).format(value)\n  }\n\n  formatMessage.time = function (value/*:: ?: number | Date */, style/*:: ?: string */, locales/*:: ?: Locales */) {\n    var options = (style && formats.time[style]) ||\n      formats.parseDatePattern(style) ||\n      formats.time.default\n    return new Intl.DateTimeFormat(locales || currentLocales, options).format(value)\n  }\n\n  formatMessage.select = function (value/*: any */, options/*: Object */) {\n    return options[value] || options.other\n  }\n\n  formatMessage.custom = function (placeholder/*: any[] */, locales/*: Locales */, value/*: any */, args/*: Object */) {\n    if (!(placeholder[1] in types)) return value\n    return types[placeholder[1]](placeholder, locales)(value, args)\n  }\n\n  formatMessage.plural = plural.bind(null, 'cardinal')\n  formatMessage.selectordinal = plural.bind(null, 'ordinal')\n  function plural (\n    pluralType/*: 'cardinal' | 'ordinal' */,\n    value/*: number */,\n    offset/*: any */,\n    options/*: any */,\n    locale/*: any */\n  ) {\n    if (typeof offset === 'object' && typeof options !== 'object') { // offset is optional\n      locale = options\n      options = offset\n      offset = 0\n    }\n    var closest = lookupClosestLocale(locale || currentLocales, plurals)\n    var plural = (closest && plurals[closest][pluralType]) || returnOther\n    return options['=' + +value] || options[plural(value - offset)] || options.other\n  }\n  function returnOther (/*:: n:number */) { return 'other' }\n\n  formatMessage.namespace = namespace\n\n  return formatMessage\n}\n\nmodule.exports = exports = namespace()\n\n\n/***/ }),\n\n/***/ \"./node_modules/lookup-closest-locale/index.js\":\n/*!*****************************************************!*\\\n  !*** ./node_modules/lookup-closest-locale/index.js ***!\n  \\*****************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n// @flow\n// \"lookup\" algorithm http://tools.ietf.org/html/rfc4647#section-3.4\n// assumes normalized language tags, and matches in a case sensitive manner\nmodule.exports = function lookupClosestLocale (locale/*: string | string[] | void */, available/*: { [string]: any } */)/*: ?string */ {\n  if (typeof locale === 'string' && available[locale]) return locale\n  var locales = [].concat(locale || [])\n  for (var l = 0, ll = locales.length; l < ll; ++l) {\n    var current = locales[l].split('-')\n    while (current.length) {\n      var candidate = current.join('-')\n      if (available[candidate]) return candidate\n      current.pop()\n    }\n  }\n}\n\n\n/***/ }),\n\n/***/ \"./node_modules/scratch-vm/src/dispatch/shared-dispatch.js\":\n/*!*****************************************************************!*\\\n  !*** ./node_modules/scratch-vm/src/dispatch/shared-dispatch.js ***!\n  \\*****************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArray(r) { if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r); }\nfunction _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar log = __webpack_require__(/*! ../util/log */ \"./node_modules/scratch-vm/src/util/log.js\");\n\n/**\n * @typedef {object} DispatchCallMessage - a message to the dispatch system representing a service method call\n * @property {*} responseId - send a response message with this response ID. See {@link DispatchResponseMessage}\n * @property {string} service - the name of the service to be called\n * @property {string} method - the name of the method to be called\n * @property {Array|undefined} args - the arguments to be passed to the method\n */\n\n/**\n * @typedef {object} DispatchResponseMessage - a message to the dispatch system representing the results of a call\n * @property {*} responseId - a copy of the response ID from the call which generated this response\n * @property {*|undefined} error - if this is truthy, then it contains results from a failed call (such as an exception)\n * @property {*|undefined} result - if error is not truthy, then this contains the return value of the call (if any)\n */\n\n/**\n * @typedef {DispatchCallMessage|DispatchResponseMessage} DispatchMessage\n * Any message to the dispatch system.\n */\n\n/**\n * The SharedDispatch class is responsible for dispatch features shared by\n * {@link CentralDispatch} and {@link WorkerDispatch}.\n */\nvar SharedDispatch = /*#__PURE__*/function () {\n  function SharedDispatch() {\n    _classCallCheck(this, SharedDispatch);\n    /**\n     * List of callback registrations for promises waiting for a response from a call to a service on another\n     * worker. A callback registration is an array of [resolve,reject] Promise functions.\n     * Calls to local services don't enter this list.\n     * @type {Array.<Function[]>}\n     */\n    this.callbacks = [];\n\n    /**\n     * The next response ID to be used.\n     * @type {int}\n     */\n    this.nextResponseId = 0;\n  }\n\n  /**\n   * Call a particular method on a particular service, regardless of whether that service is provided locally or on\n   * a worker. If the service is provided by a worker, the `args` will be copied using the Structured Clone\n   * algorithm, except for any items which are also in the `transfer` list. Ownership of those items will be\n   * transferred to the worker, and they should not be used after this call.\n   * @example\n   *      dispatcher.call('vm', 'setData', 'cat', 42);\n   *      // this finds the worker for the 'vm' service, then on that worker calls:\n   *      vm.setData('cat', 42);\n   * @param {string} service - the name of the service.\n   * @param {string} method - the name of the method.\n   * @param {*} [args] - the arguments to be copied to the method, if any.\n   * @returns {Promise} - a promise for the return value of the service method.\n   */\n  return _createClass(SharedDispatch, [{\n    key: \"call\",\n    value: function call(service, method) {\n      for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        args[_key - 2] = arguments[_key];\n      }\n      return this.transferCall.apply(this, [service, method, null].concat(args));\n    }\n\n    /**\n     * Call a particular method on a particular service, regardless of whether that service is provided locally or on\n     * a worker. If the service is provided by a worker, the `args` will be copied using the Structured Clone\n     * algorithm, except for any items which are also in the `transfer` list. Ownership of those items will be\n     * transferred to the worker, and they should not be used after this call.\n     * @example\n     *      dispatcher.transferCall('vm', 'setData', [myArrayBuffer], 'cat', myArrayBuffer);\n     *      // this finds the worker for the 'vm' service, transfers `myArrayBuffer` to it, then on that worker calls:\n     *      vm.setData('cat', myArrayBuffer);\n     * @param {string} service - the name of the service.\n     * @param {string} method - the name of the method.\n     * @param {Array} [transfer] - objects to be transferred instead of copied. Must be present in `args` to be useful.\n     * @param {*} [args] - the arguments to be copied to the method, if any.\n     * @returns {Promise} - a promise for the return value of the service method.\n     */\n  }, {\n    key: \"transferCall\",\n    value: function transferCall(service, method, transfer) {\n      try {\n        var _this$_getServiceProv = this._getServiceProvider(service),\n          provider = _this$_getServiceProv.provider,\n          isRemote = _this$_getServiceProv.isRemote;\n        if (provider) {\n          for (var _len2 = arguments.length, args = new Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {\n            args[_key2 - 3] = arguments[_key2];\n          }\n          if (isRemote) {\n            return this._remoteTransferCall.apply(this, [provider, service, method, transfer].concat(args));\n          }\n\n          // TODO: verify correct `this` after switching from apply to spread\n          // eslint-disable-next-line prefer-spread\n          var result = provider[method].apply(provider, args);\n          return Promise.resolve(result);\n        }\n        return Promise.reject(new Error(\"Service not found: \".concat(service)));\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    }\n\n    /**\n     * Check if a particular service lives on another worker.\n     * @param {string} service - the service to check.\n     * @returns {boolean} - true if the service is remote (calls must cross a Worker boundary), false otherwise.\n     * @private\n     */\n  }, {\n    key: \"_isRemoteService\",\n    value: function _isRemoteService(service) {\n      return this._getServiceProvider(service).isRemote;\n    }\n\n    /**\n     * Like {@link call}, but force the call to be posted through a particular communication channel.\n     * @param {object} provider - send the call through this object's `postMessage` function.\n     * @param {string} service - the name of the service.\n     * @param {string} method - the name of the method.\n     * @param {*} [args] - the arguments to be copied to the method, if any.\n     * @returns {Promise} - a promise for the return value of the service method.\n     */\n  }, {\n    key: \"_remoteCall\",\n    value: function _remoteCall(provider, service, method) {\n      for (var _len3 = arguments.length, args = new Array(_len3 > 3 ? _len3 - 3 : 0), _key3 = 3; _key3 < _len3; _key3++) {\n        args[_key3 - 3] = arguments[_key3];\n      }\n      return this._remoteTransferCall.apply(this, [provider, service, method, null].concat(args));\n    }\n\n    /**\n     * Like {@link transferCall}, but force the call to be posted through a particular communication channel.\n     * @param {object} provider - send the call through this object's `postMessage` function.\n     * @param {string} service - the name of the service.\n     * @param {string} method - the name of the method.\n     * @param {Array} [transfer] - objects to be transferred instead of copied. Must be present in `args` to be useful.\n     * @param {*} [args] - the arguments to be copied to the method, if any.\n     * @returns {Promise} - a promise for the return value of the service method.\n     */\n  }, {\n    key: \"_remoteTransferCall\",\n    value: function _remoteTransferCall(provider, service, method, transfer) {\n      var _this = this;\n      for (var _len4 = arguments.length, args = new Array(_len4 > 4 ? _len4 - 4 : 0), _key4 = 4; _key4 < _len4; _key4++) {\n        args[_key4 - 4] = arguments[_key4];\n      }\n      return new Promise(function (resolve, reject) {\n        var responseId = _this._storeCallbacks(resolve, reject);\n\n        /** @TODO: remove this hack! this is just here so we don't try to send `util` to a worker */\n        // tw: upstream's logic is broken\n        // Args is actually a 3 length list of [args, util, real block info]\n        // We only want to send args. The others will throw errors when they try to be cloned\n        if (args.length > 0 && typeof args[args.length - 1].func === 'function') {\n          args.pop();\n          args.pop();\n        }\n        if (transfer) {\n          provider.postMessage({\n            service: service,\n            method: method,\n            responseId: responseId,\n            args: args\n          }, transfer);\n        } else {\n          provider.postMessage({\n            service: service,\n            method: method,\n            responseId: responseId,\n            args: args\n          });\n        }\n      });\n    }\n\n    /**\n     * Store callback functions pending a response message.\n     * @param {Function} resolve - function to call if the service method returns.\n     * @param {Function} reject - function to call if the service method throws.\n     * @returns {*} - a unique response ID for this set of callbacks. See {@link _deliverResponse}.\n     * @protected\n     */\n  }, {\n    key: \"_storeCallbacks\",\n    value: function _storeCallbacks(resolve, reject) {\n      var responseId = this.nextResponseId++;\n      this.callbacks[responseId] = [resolve, reject];\n      return responseId;\n    }\n\n    /**\n     * Deliver call response from a worker. This should only be called as the result of a message from a worker.\n     * @param {int} responseId - the response ID of the callback set to call.\n     * @param {DispatchResponseMessage} message - the message containing the response value(s).\n     * @protected\n     */\n  }, {\n    key: \"_deliverResponse\",\n    value: function _deliverResponse(responseId, message) {\n      try {\n        var _this$callbacks$respo = _slicedToArray(this.callbacks[responseId], 2),\n          resolve = _this$callbacks$respo[0],\n          reject = _this$callbacks$respo[1];\n        delete this.callbacks[responseId];\n        if (message.error) {\n          reject(message.error);\n        } else {\n          resolve(message.result);\n        }\n      } catch (e) {\n        log.error(\"Dispatch callback failed: \".concat(e));\n      }\n    }\n\n    /**\n     * Handle a message event received from a connected worker.\n     * @param {Worker} worker - the worker which sent the message, or the global object if running in a worker.\n     * @param {MessageEvent} event - the message event to be handled.\n     * @protected\n     */\n  }, {\n    key: \"_onMessage\",\n    value: function _onMessage(worker, event) {\n      /** @type {DispatchMessage} */\n      var message = event.data;\n      message.args = message.args || [];\n      var promise;\n      if (message.service) {\n        if (message.service === 'dispatch') {\n          promise = this._onDispatchMessage(worker, message);\n        } else {\n          promise = this.call.apply(this, [message.service, message.method].concat(_toConsumableArray(message.args)));\n        }\n      } else if (typeof message.responseId === 'undefined') {\n        log.error(\"Dispatch caught malformed message from a worker: \".concat(JSON.stringify(event)));\n      } else {\n        this._deliverResponse(message.responseId, message);\n      }\n      if (promise) {\n        if (typeof message.responseId === 'undefined') {\n          log.error(\"Dispatch message missing required response ID: \".concat(JSON.stringify(event)));\n        } else {\n          promise.then(function (result) {\n            return worker.postMessage({\n              responseId: message.responseId,\n              result: result\n            });\n          }, function (error) {\n            return worker.postMessage({\n              responseId: message.responseId,\n              error: \"\".concat(error)\n            });\n          });\n        }\n      }\n    }\n\n    /**\n     * Fetch the service provider object for a particular service name.\n     * @abstract\n     * @param {string} service - the name of the service to look up\n     * @returns {{provider:(object|Worker), isRemote:boolean}} - the means to contact the service, if found\n     * @protected\n     */\n  }, {\n    key: \"_getServiceProvider\",\n    value: function _getServiceProvider(service) {\n      throw new Error(\"Could not get provider for \".concat(service, \": _getServiceProvider not implemented\"));\n    }\n\n    /**\n     * Handle a call message sent to the dispatch service itself\n     * @abstract\n     * @param {Worker} worker - the worker which sent the message.\n     * @param {DispatchCallMessage} message - the message to be handled.\n     * @returns {Promise|undefined} - a promise for the results of this operation, if appropriate\n     * @private\n     */\n  }, {\n    key: \"_onDispatchMessage\",\n    value: function _onDispatchMessage(worker, message) {\n      throw new Error(\"Unimplemented dispatch message handler cannot handle \".concat(message.method, \" method\"));\n    }\n  }]);\n}();\nmodule.exports = SharedDispatch;\n\n/***/ }),\n\n/***/ \"./node_modules/scratch-vm/src/dispatch/worker-dispatch.js\":\n/*!*****************************************************************!*\\\n  !*** ./node_modules/scratch-vm/src/dispatch/worker-dispatch.js ***!\n  \\*****************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nvar SharedDispatch = __webpack_require__(/*! ./shared-dispatch */ \"./node_modules/scratch-vm/src/dispatch/shared-dispatch.js\");\nvar log = __webpack_require__(/*! ../util/log */ \"./node_modules/scratch-vm/src/util/log.js\");\nvar _require = __webpack_require__(/*! ../extension-support/tw-extension-worker-context */ \"./node_modules/scratch-vm/src/extension-support/tw-extension-worker-context.js\"),\n  centralDispatchService = _require.centralDispatchService;\n\n/**\n * This class provides a Worker with the means to participate in the message dispatch system managed by CentralDispatch.\n * From any context in the messaging system, the dispatcher's \"call\" method can call any method on any \"service\"\n * provided in any participating context. The dispatch system will forward function arguments and return values across\n * worker boundaries as needed.\n * @see {CentralDispatch}\n */\nvar WorkerDispatch = /*#__PURE__*/function (_SharedDispatch) {\n  function WorkerDispatch() {\n    var _this;\n    _classCallCheck(this, WorkerDispatch);\n    _this = _callSuper(this, WorkerDispatch);\n\n    /**\n     * This promise will be resolved when we have successfully connected to central dispatch.\n     * @type {Promise}\n     * @see {waitForConnection}\n     * @private\n     */\n    _this._connectionPromise = new Promise(function (resolve) {\n      _this._onConnect = resolve;\n    });\n\n    /**\n     * Map of service name to local service provider.\n     * If a service is not listed here, it is assumed to be provided by another context (another Worker or the main\n     * thread).\n     * @see {setService}\n     * @type {object}\n     */\n    _this.services = {};\n    _this._onMessage = _this._onMessage.bind(_this, centralDispatchService);\n    if (typeof self !== 'undefined') {\n      self.onmessage = _this._onMessage;\n    }\n    return _this;\n  }\n\n  /**\n   * @returns {Promise} a promise which will resolve upon connection to central dispatch. If you need to make a call\n   * immediately on \"startup\" you can attach a 'then' to this promise.\n   * @example\n   *      dispatch.waitForConnection.then(() => {\n   *          dispatch.call('myService', 'hello');\n   *      })\n   */\n  _inherits(WorkerDispatch, _SharedDispatch);\n  return _createClass(WorkerDispatch, [{\n    key: \"waitForConnection\",\n    get: function get() {\n      return this._connectionPromise;\n    }\n\n    /**\n     * Set a local object as the global provider of the specified service.\n     * WARNING: Any method on the provider can be called from any worker within the dispatch system.\n     * @param {string} service - a globally unique string identifying this service. Examples: 'vm', 'gui', 'extension9'.\n     * @param {object} provider - a local object which provides this service.\n     * @returns {Promise} - a promise which will resolve once the service is registered.\n     */\n  }, {\n    key: \"setService\",\n    value: function setService(service, provider) {\n      var _this2 = this;\n      if (Object.prototype.hasOwnProperty.call(this.services, service)) {\n        log.warn(\"Worker dispatch replacing existing service provider for \".concat(service));\n      }\n      this.services[service] = provider;\n      return this.waitForConnection.then(function () {\n        return _this2._remoteCall(centralDispatchService, 'dispatch', 'setService', service);\n      });\n    }\n\n    /**\n     * Fetch the service provider object for a particular service name.\n     * @override\n     * @param {string} service - the name of the service to look up\n     * @returns {{provider:(object|Worker), isRemote:boolean}} - the means to contact the service, if found\n     * @protected\n     */\n  }, {\n    key: \"_getServiceProvider\",\n    value: function _getServiceProvider(service) {\n      // if we don't have a local service by this name, contact central dispatch by calling `postMessage` on self\n      var provider = this.services[service];\n      return {\n        provider: provider || centralDispatchService,\n        isRemote: !provider\n      };\n    }\n\n    /**\n     * Handle a call message sent to the dispatch service itself\n     * @override\n     * @param {Worker} worker - the worker which sent the message.\n     * @param {DispatchCallMessage} message - the message to be handled.\n     * @returns {Promise|undefined} - a promise for the results of this operation, if appropriate\n     * @protected\n     */\n  }, {\n    key: \"_onDispatchMessage\",\n    value: function _onDispatchMessage(worker, message) {\n      var promise;\n      switch (message.method) {\n        case 'handshake':\n          promise = this._onConnect();\n          break;\n        case 'terminate':\n          // Don't close until next tick, after sending confirmation back\n          setTimeout(function () {\n            return self.close();\n          }, 0);\n          promise = Promise.resolve();\n          break;\n        default:\n          log.error(\"Worker dispatch received message for unknown method: \".concat(message.method));\n      }\n      return promise;\n    }\n  }]);\n}(SharedDispatch);\nmodule.exports = new WorkerDispatch();\n\n/***/ }),\n\n/***/ \"./node_modules/scratch-vm/src/extension-support/argument-type.js\":\n/*!************************************************************************!*\\\n  !*** ./node_modules/scratch-vm/src/extension-support/argument-type.js ***!\n  \\************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/**\n * Block argument types\n * @enum {string}\n */\nvar ArgumentType = {\n  /**\n   * Numeric value with angle picker\n   */\n  ANGLE: 'angle',\n  /**\n   * Boolean value with hexagonal placeholder\n   */\n  BOOLEAN: 'Boolean',\n  /**\n   * Numeric value with color picker\n   */\n  COLOR: 'color',\n  /**\n   * Numeric value with text field\n   */\n  NUMBER: 'number',\n  /**\n   * String value with text field\n   */\n  STRING: 'string',\n  /**\n   * String value with matrix field\n   */\n  MATRIX: 'matrix',\n  /**\n   * MIDI note number with note picker (piano) field\n   */\n  NOTE: 'note',\n  /**\n   * Inline image on block (as part of the label)\n   */\n  IMAGE: 'image',\n  /**\n   * Name of costume in the current target\n   */\n  COSTUME: 'costume',\n  /**\n   * Name of sound in the current target\n   */\n  SOUND: 'sound'\n};\nmodule.exports = ArgumentType;\n\n/***/ }),\n\n/***/ \"./node_modules/scratch-vm/src/extension-support/block-type.js\":\n/*!*********************************************************************!*\\\n  !*** ./node_modules/scratch-vm/src/extension-support/block-type.js ***!\n  \\*********************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/**\n * Types of block\n * @enum {string}\n */\nvar BlockType = {\n  /**\n   * Boolean reporter with hexagonal shape\n   */\n  BOOLEAN: 'Boolean',\n  /**\n   * A button (not an actual block) for some special action, like making a variable\n   */\n  BUTTON: 'button',\n  /**\n   * A text label (not an actual block) for adding comments or labling blocks\n   */\n  LABEL: 'label',\n  /**\n   * Command block\n   */\n  COMMAND: 'command',\n  /**\n   * Specialized command block which may or may not run a child branch\n   * The thread continues with the next block whether or not a child branch ran.\n   */\n  CONDITIONAL: 'conditional',\n  /**\n   * Specialized hat block with no implementation function\n   * This stack only runs if the corresponding event is emitted by other code.\n   */\n  EVENT: 'event',\n  /**\n   * Hat block which conditionally starts a block stack\n   */\n  HAT: 'hat',\n  /**\n   * Specialized command block which may or may not run a child branch\n   * If a child branch runs, the thread evaluates the loop block again.\n   */\n  LOOP: 'loop',\n  /**\n   * General reporter with numeric or string value\n   */\n  REPORTER: 'reporter',\n  /**\n   * Arbitrary scratch-blocks XML.\n   */\n  XML: 'xml'\n};\nmodule.exports = BlockType;\n\n/***/ }),\n\n/***/ \"./node_modules/scratch-vm/src/extension-support/extension-worker.js\":\n/*!***************************************************************************!*\\\n  !*** ./node_modules/scratch-vm/src/extension-support/extension-worker.js ***!\n  \\***************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/* eslint-env worker */\n\nvar ScratchCommon = __webpack_require__(/*! ./tw-extension-api-common */ \"./node_modules/scratch-vm/src/extension-support/tw-extension-api-common.js\");\nvar createScratchX = __webpack_require__(/*! ./tw-scratchx-compatibility-layer */ \"./node_modules/scratch-vm/src/extension-support/tw-scratchx-compatibility-layer.js\");\nvar dispatch = __webpack_require__(/*! ../dispatch/worker-dispatch */ \"./node_modules/scratch-vm/src/dispatch/worker-dispatch.js\");\nvar log = __webpack_require__(/*! ../util/log */ \"./node_modules/scratch-vm/src/util/log.js\");\nvar _require = __webpack_require__(/*! ./tw-extension-worker-context */ \"./node_modules/scratch-vm/src/extension-support/tw-extension-worker-context.js\"),\n  isWorker = _require.isWorker;\nvar createTranslate = __webpack_require__(/*! ./tw-l10n */ \"./node_modules/scratch-vm/src/extension-support/tw-l10n.js\");\nvar translate = createTranslate(null);\nvar loadScripts = function loadScripts(url) {\n  if (isWorker) {\n    importScripts(url);\n  } else {\n    return new Promise(function (resolve, reject) {\n      var script = document.createElement('script');\n      script.onload = function () {\n        return resolve();\n      };\n      script.onerror = function () {\n        reject(new Error(\"Error in sandboxed script: \".concat(url, \". Check the console for more information.\")));\n      };\n      script.src = url;\n      document.body.appendChild(script);\n    });\n  }\n};\nvar ExtensionWorker = /*#__PURE__*/function () {\n  function ExtensionWorker() {\n    var _this = this;\n    _classCallCheck(this, ExtensionWorker);\n    this.nextExtensionId = 0;\n    this.initialRegistrations = [];\n    this.firstRegistrationPromise = new Promise(function (resolve) {\n      _this.firstRegistrationCallback = resolve;\n    });\n    dispatch.waitForConnection.then(function () {\n      dispatch.call('extensions', 'allocateWorker').then(/*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(x) {\n          var _x2, id, extension, initialRegistrations;\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                _x2 = _slicedToArray(x, 2), id = _x2[0], extension = _x2[1];\n                _this.workerId = id;\n                _context.prev = 2;\n                _context.next = 5;\n                return loadScripts(extension);\n              case 5:\n                _context.next = 7;\n                return _this.firstRegistrationPromise;\n              case 7:\n                initialRegistrations = _this.initialRegistrations;\n                _this.initialRegistrations = null;\n                Promise.all(initialRegistrations).then(function () {\n                  return dispatch.call('extensions', 'onWorkerInit', id);\n                });\n                _context.next = 16;\n                break;\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](2);\n                log.error(_context.t0);\n                dispatch.call('extensions', 'onWorkerInit', id, \"\".concat(_context.t0));\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee, null, [[2, 12]]);\n        }));\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    });\n    this.extensions = [];\n  }\n  return _createClass(ExtensionWorker, [{\n    key: \"register\",\n    value: function register(extensionObject) {\n      var extensionId = this.nextExtensionId++;\n      this.extensions.push(extensionObject);\n      var serviceName = \"extension.\".concat(this.workerId, \".\").concat(extensionId);\n      var promise = dispatch.setService(serviceName, extensionObject).then(function () {\n        return dispatch.call('extensions', 'registerExtensionService', serviceName);\n      });\n      if (this.initialRegistrations) {\n        this.firstRegistrationCallback();\n        this.initialRegistrations.push(promise);\n      }\n      return promise;\n    }\n  }]);\n}();\nglobal.Scratch = global.Scratch || {};\nObject.assign(global.Scratch, ScratchCommon, {\n  canFetch: function canFetch() {\n    return Promise.resolve(true);\n  },\n  fetch: function (_fetch) {\n    function fetch(_x3, _x4) {\n      return _fetch.apply(this, arguments);\n    }\n    fetch.toString = function () {\n      return _fetch.toString();\n    };\n    return fetch;\n  }(function (url, options) {\n    return fetch(url, options);\n  }),\n  canOpenWindow: function canOpenWindow() {\n    return Promise.resolve(false);\n  },\n  openWindow: function openWindow() {\n    return Promise.reject(new Error('Scratch.openWindow not supported in sandboxed extensions'));\n  },\n  canRedirect: function canRedirect() {\n    return Promise.resolve(false);\n  },\n  redirect: function redirect() {\n    return Promise.reject(new Error('Scratch.redirect not supported in sandboxed extensions'));\n  },\n  canRecordAudio: function canRecordAudio() {\n    return Promise.resolve(false);\n  },\n  canRecordVideo: function canRecordVideo() {\n    return Promise.resolve(false);\n  },\n  canReadClipboard: function canReadClipboard() {\n    return Promise.resolve(false);\n  },\n  canNotify: function canNotify() {\n    return Promise.resolve(false);\n  },\n  canGeolocate: function canGeolocate() {\n    return Promise.resolve(false);\n  },\n  canEmbed: function canEmbed() {\n    return Promise.resolve(false);\n  },\n  canDownload: function canDownload() {\n    return Promise.resolve(false);\n  },\n  download: function download() {\n    return Promise.reject(new Error('Scratch.download not supported in sandboxed extensions'));\n  },\n  translate: translate\n});\n\n/**\n * Expose only specific parts of the worker to extensions.\n */\nvar extensionWorker = new ExtensionWorker();\nglobal.Scratch.extensions = {\n  register: extensionWorker.register.bind(extensionWorker)\n};\nglobal.ScratchExtensions = createScratchX(global.Scratch);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n/***/ }),\n\n/***/ \"./node_modules/scratch-vm/src/extension-support/target-type.js\":\n/*!**********************************************************************!*\\\n  !*** ./node_modules/scratch-vm/src/extension-support/target-type.js ***!\n  \\**********************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/**\n * Default types of Target supported by the VM\n * @enum {string}\n */\nvar TargetType = {\n  /**\n   * Rendered target which can move, change costumes, etc.\n   */\n  SPRITE: 'sprite',\n  /**\n   * Rendered target which cannot move but can change backdrops\n   */\n  STAGE: 'stage'\n};\nmodule.exports = TargetType;\n\n/***/ }),\n\n/***/ \"./node_modules/scratch-vm/src/extension-support/tw-extension-api-common.js\":\n/*!**********************************************************************************!*\\\n  !*** ./node_modules/scratch-vm/src/extension-support/tw-extension-api-common.js ***!\n  \\**********************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar ArgumentType = __webpack_require__(/*! ./argument-type */ \"./node_modules/scratch-vm/src/extension-support/argument-type.js\");\nvar BlockType = __webpack_require__(/*! ./block-type */ \"./node_modules/scratch-vm/src/extension-support/block-type.js\");\nvar TargetType = __webpack_require__(/*! ./target-type */ \"./node_modules/scratch-vm/src/extension-support/target-type.js\");\nvar Cast = __webpack_require__(/*! ../util/cast */ \"./node_modules/scratch-vm/src/util/cast.js\");\nvar Scratch = {\n  ArgumentType: ArgumentType,\n  BlockType: BlockType,\n  TargetType: TargetType,\n  Cast: Cast\n};\nmodule.exports = Scratch;\n\n/***/ }),\n\n/***/ \"./node_modules/scratch-vm/src/extension-support/tw-extension-worker-context.js\":\n/*!**************************************************************************************!*\\\n  !*** ./node_modules/scratch-vm/src/extension-support/tw-extension-worker-context.js ***!\n  \\**************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n  isWorker: true,\n  // centralDispatchService is the object to call postMessage() on to send a message to parent.\n  centralDispatchService: self\n};\n\n/***/ }),\n\n/***/ \"./node_modules/scratch-vm/src/extension-support/tw-jquery-shim.js\":\n/*!*************************************************************************!*\\\n  !*** ./node_modules/scratch-vm/src/extension-support/tw-jquery-shim.js ***!\n  \\*************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\n/**\n * @fileoverview\n * Many ScratchX extensions require jQuery to do things like loading scripts and making requests.\n * The real jQuery is pretty large and we'd rather not bring in everything, so this file reimplements\n * small stubs of a few jQuery methods.\n * It's just supposed to be enough to make existing ScratchX extensions work, nothing more.\n */\n\nvar log = __webpack_require__(/*! ../util/log */ \"./node_modules/scratch-vm/src/util/log.js\");\nvar jQuery = function jQuery() {\n  throw new Error('Not implemented');\n};\njQuery.getScript = function (src, callback) {\n  var script = document.createElement('script');\n  script.src = src;\n  if (callback) {\n    // We don't implement callback arguments.\n    script.onload = function () {\n      return callback();\n    };\n  }\n  document.body.appendChild(script);\n};\n\n/**\n * @param {Record<string, any>|undefined} obj\n * @returns {URLSearchParams}\n */\nvar objectToQueryString = function objectToQueryString(obj) {\n  var params = new URLSearchParams();\n  if (obj) {\n    for (var _i = 0, _Object$keys = Object.keys(obj); _i < _Object$keys.length; _i++) {\n      var key = _Object$keys[_i];\n      params.set(key, obj[key]);\n    }\n  }\n  return params;\n};\nvar jsonpCallback = 0;\njQuery.ajax = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(arg1, arg2) {\n    var options, urlParameters, getFinalURL, successCallback, errorCallback, callbackName, callbackParameterName, res;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          options = {};\n          if (arg1 && arg2) {\n            options = arg2;\n            options.url = arg1;\n          } else if (arg1) {\n            options = arg1;\n          }\n          urlParameters = objectToQueryString(options.data);\n          getFinalURL = function getFinalURL() {\n            var query = urlParameters.toString();\n            var url = options.url;\n            if (query) {\n              url += \"?\".concat(query);\n            }\n            // Forcibly upgrade all HTTP requests to HTTPS so that they don't error on HTTPS sites\n            // All the extensions we care about work fine with this\n            if (url.startsWith('http://')) {\n              url = url.replace('http://', 'https://');\n            }\n            return url;\n          };\n          successCallback = function successCallback(result) {\n            if (options.success) {\n              options.success(result);\n            }\n          };\n          errorCallback = function errorCallback(error) {\n            log.error(error);\n            if (options.error) {\n              // The error object we provide here might not match what jQuery provides but it's enough to\n              // prevent extensions from throwing errors trying to access properties.\n              options.error(error);\n            }\n          };\n          _context.prev = 6;\n          if (!(options.dataType === 'jsonp')) {\n            _context.next = 14;\n            break;\n          }\n          callbackName = \"_jsonp_callback\".concat(jsonpCallback++);\n          global[callbackName] = function (data) {\n            delete global[callbackName];\n            successCallback(data);\n          };\n          callbackParameterName = options.jsonp || 'callback';\n          urlParameters.set(callbackParameterName, callbackName);\n          jQuery.getScript(getFinalURL());\n          return _context.abrupt(\"return\");\n        case 14:\n          if (!(options.dataType === 'script')) {\n            _context.next = 17;\n            break;\n          }\n          jQuery.getScript(getFinalURL(), successCallback);\n          return _context.abrupt(\"return\");\n        case 17:\n          _context.next = 19;\n          return fetch(getFinalURL(), {\n            headers: options.headers\n          });\n        case 19:\n          res = _context.sent;\n          _context.t0 = successCallback;\n          _context.next = 23;\n          return res.json();\n        case 23:\n          _context.t1 = _context.sent;\n          (0, _context.t0)(_context.t1);\n          _context.next = 30;\n          break;\n        case 27:\n          _context.prev = 27;\n          _context.t2 = _context[\"catch\"](6);\n          errorCallback(_context.t2);\n        case 30:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[6, 27]]);\n  }));\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nmodule.exports = jQuery;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n/***/ }),\n\n/***/ \"./node_modules/scratch-vm/src/extension-support/tw-l10n.js\":\n/*!******************************************************************!*\\\n  !*** ./node_modules/scratch-vm/src/extension-support/tw-l10n.js ***!\n  \\******************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar formatMessage = __webpack_require__(/*! format-message */ \"./node_modules/format-message/index.js\");\n\n/**\n * @param {VM|null} vm\n * @returns {object}\n */\nvar createTranslate = function createTranslate(vm) {\n  var namespace = formatMessage.namespace();\n  var translate = function translate(message, args) {\n    if (message && _typeof(message) === 'object') {\n      // already in the expected format\n    } else if (typeof message === 'string') {\n      message = {\n        \"default\": message\n      };\n    } else {\n      throw new Error('unsupported data type in translate()');\n    }\n    return namespace(message, args);\n  };\n  var generateId = function generateId(defaultMessage) {\n    return \"_\".concat(defaultMessage);\n  };\n  var getLocale = function getLocale() {\n    if (vm) return vm.getLocale();\n    if (typeof navigator !== 'undefined') return navigator.language;\n    return 'en';\n  };\n  var storedTranslations = {};\n  translate.setup = function (newTranslations) {\n    if (newTranslations) {\n      storedTranslations = newTranslations;\n    }\n    namespace.setup({\n      locale: getLocale(),\n      missingTranslation: 'ignore',\n      generateId: generateId,\n      translations: storedTranslations\n    });\n  };\n  Object.defineProperty(translate, 'language', {\n    configurable: true,\n    enumerable: true,\n    get: function get() {\n      return getLocale();\n    }\n  });\n  translate.setup({});\n  if (vm) {\n    vm.on('LOCALE_CHANGED', function () {\n      translate.setup(null);\n    });\n  }\n  return translate;\n};\nmodule.exports = createTranslate;\n\n/***/ }),\n\n/***/ \"./node_modules/scratch-vm/src/extension-support/tw-scratchx-compatibility-layer.js\":\n/*!******************************************************************************************!*\\\n  !*** ./node_modules/scratch-vm/src/extension-support/tw-scratchx-compatibility-layer.js ***!\n  \\******************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _createForOfIteratorHelper(r, e) { var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t[\"return\"] || t[\"return\"](); } finally { if (u) throw o; } } }; }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\n// ScratchX API Documentation: https://github.com/LLK/scratchx/wiki/\n\nvar ArgumentType = __webpack_require__(/*! ./argument-type */ \"./node_modules/scratch-vm/src/extension-support/argument-type.js\");\nvar BlockType = __webpack_require__(/*! ./block-type */ \"./node_modules/scratch-vm/src/extension-support/block-type.js\");\nvar _require = __webpack_require__(/*! ./tw-scratchx-utilities */ \"./node_modules/scratch-vm/src/extension-support/tw-scratchx-utilities.js\"),\n  argumentIndexToId = _require.argumentIndexToId,\n  generateExtensionId = _require.generateExtensionId;\n\n/**\n * @typedef ScratchXDescriptor\n * @property {unknown[][]} blocks\n * @property {Record<string, unknown[]>} [menus]\n * @property {string} [url]\n * @property {string} [displayName]\n */\n\n/**\n * @typedef ScratchXStatus\n * @property {0|1|2} status 0 is red/error, 1 is yellow/not ready, 2 is green/ready\n * @property {string} msg\n */\n\nvar parseScratchXBlockType = function parseScratchXBlockType(type) {\n  if (type === '' || type === ' ' || type === 'w') {\n    return {\n      type: BlockType.COMMAND,\n      async: type === 'w'\n    };\n  }\n  if (type === 'r' || type === 'R') {\n    return {\n      type: BlockType.REPORTER,\n      async: type === 'R'\n    };\n  }\n  if (type === 'b') {\n    return {\n      type: BlockType.BOOLEAN,\n      // ScratchX docs don't seem to mention boolean reporters that wait\n      async: false\n    };\n  }\n  if (type === 'h') {\n    return {\n      type: BlockType.HAT,\n      async: false\n    };\n  }\n  throw new Error(\"Unknown ScratchX block type: \".concat(type));\n};\nvar isScratchCompatibleValue = function isScratchCompatibleValue(v) {\n  return typeof v === 'string' || typeof v === 'number' || typeof v === 'boolean';\n};\n\n/**\n * @param {string} argument ScratchX argument with leading % removed.\n * @param {unknown} defaultValue Default value, if any\n */\nvar parseScratchXArgument = function parseScratchXArgument(argument, defaultValue) {\n  var result = {};\n  var hasDefaultValue = isScratchCompatibleValue(defaultValue);\n\n  // defaultValue is ignored for booleans in Scratch 3\n  if (hasDefaultValue && argument !== 'b') {\n    result.defaultValue = defaultValue;\n  }\n  if (argument === 's') {\n    result.type = ArgumentType.STRING;\n    if (!hasDefaultValue) {\n      result.defaultValue = '';\n    }\n  } else if (argument === 'n') {\n    result.type = ArgumentType.NUMBER;\n    if (!hasDefaultValue) {\n      result.defaultValue = 0;\n    }\n  } else if (argument[0] === 'm') {\n    result.type = ArgumentType.STRING;\n    var split = argument.split(/\\.|:/);\n    var menuName = split[1];\n    result.menu = menuName;\n  } else if (argument === 'b') {\n    result.type = ArgumentType.BOOLEAN;\n  } else {\n    throw new Error(\"Unknown ScratchX argument type: \".concat(argument));\n  }\n  return result;\n};\nvar wrapScratchXFunction = function wrapScratchXFunction(originalFunction, argumentCount, async) {\n  return function (args) {\n    // Convert Scratch 3's argument object to an argument list expected by ScratchX\n    var argumentList = [];\n    for (var i = 0; i < argumentCount; i++) {\n      argumentList.push(args[argumentIndexToId(i)]);\n    }\n    if (async) {\n      return new Promise(function (resolve) {\n        originalFunction.apply(void 0, argumentList.concat([resolve]));\n      });\n    }\n    return originalFunction.apply(void 0, argumentList);\n  };\n};\n\n/**\n * @param {string} name\n * @param {ScratchXDescriptor} descriptor\n * @param {Record<string, () => unknown>} functions\n */\nvar convert = function convert(name, descriptor, functions) {\n  var extensionId = generateExtensionId(name);\n  var info = {\n    id: extensionId,\n    name: descriptor.displayName || name,\n    blocks: [],\n    color1: '#4a4a5e',\n    color2: '#31323f',\n    color3: '#191a21'\n  };\n  var scratch3Extension = {\n    getInfo: function getInfo() {\n      return info;\n    },\n    _getStatus: functions._getStatus\n  };\n  if (descriptor.url) {\n    info.docsURI = descriptor.url;\n  }\n  var _iterator = _createForOfIteratorHelper(descriptor.blocks),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var blockDescriptor = _step.value;\n      if (blockDescriptor.length === 1) {\n        // Separator\n        info.blocks.push('---');\n        continue;\n      }\n      var scratchXBlockType = blockDescriptor[0];\n      var blockText = blockDescriptor[1];\n      var functionName = blockDescriptor[2];\n      var defaultArgumentValues = blockDescriptor.slice(3);\n      var scratchText = '';\n      var argumentInfo = [];\n      var blockTextParts = blockText.split(/%([\\w.:]+)/g);\n      for (var i = 0; i < blockTextParts.length; i++) {\n        var part = blockTextParts[i];\n        var isArgument = i % 2 === 1;\n        if (isArgument) {\n          parseScratchXArgument(part);\n          var argumentIndex = Math.floor(i / 2).toString();\n          var argumentDefaultValue = defaultArgumentValues[argumentIndex];\n          var argumentId = argumentIndexToId(argumentIndex);\n          argumentInfo[argumentId] = parseScratchXArgument(part, argumentDefaultValue);\n          scratchText += \"[\".concat(argumentId, \"]\");\n        } else {\n          scratchText += part;\n        }\n      }\n      var scratch3BlockType = parseScratchXBlockType(scratchXBlockType);\n      var blockInfo = {\n        opcode: functionName,\n        blockType: scratch3BlockType.type,\n        text: scratchText,\n        arguments: argumentInfo\n      };\n      info.blocks.push(blockInfo);\n      var originalFunction = functions[functionName];\n      var argumentCount = argumentInfo.length;\n      scratch3Extension[functionName] = wrapScratchXFunction(originalFunction, argumentCount, scratch3BlockType.async);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  var menus = descriptor.menus;\n  if (menus) {\n    var scratch3Menus = {};\n    var _iterator2 = _createForOfIteratorHelper(Object.keys(menus) || {}),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var menuName = _step2.value;\n        var menuItems = menus[menuName];\n        var menuInfo = {\n          items: menuItems\n        };\n        scratch3Menus[menuName] = menuInfo;\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    info.menus = scratch3Menus;\n  }\n  return scratch3Extension;\n};\nvar extensionNameToExtension = new Map();\n\n/**\n * @param {*} Scratch Scratch 3.0 extension API object\n * @returns {*} ScratchX-compatible API object\n */\nvar createScratchX = function createScratchX(Scratch) {\n  var register = function register(name, descriptor, functions) {\n    var scratch3Extension = convert(name, descriptor, functions);\n    extensionNameToExtension.set(name, scratch3Extension);\n    Scratch.extensions.register(scratch3Extension);\n  };\n\n  /**\n   * @param {string} extensionName\n   * @returns {ScratchXStatus}\n   */\n  var getStatus = function getStatus(extensionName) {\n    var extension = extensionNameToExtension.get(extensionName);\n    if (extension) {\n      return extension._getStatus();\n    }\n    return {\n      status: 0,\n      msg: 'does not exist'\n    };\n  };\n  return {\n    register: register,\n    getStatus: getStatus\n  };\n};\nmodule.exports = createScratchX;\n\n/***/ }),\n\n/***/ \"./node_modules/scratch-vm/src/extension-support/tw-scratchx-utilities.js\":\n/*!********************************************************************************!*\\\n  !*** ./node_modules/scratch-vm/src/extension-support/tw-scratchx-utilities.js ***!\n  \\********************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/**\n * @fileoverview\n * General ScratchX-related utilities used in multiple places.\n * Changing these functions may break projects.\n */\n\n/**\n * @param {string} scratchXName\n * @returns {string}\n */\nvar generateExtensionId = function generateExtensionId(scratchXName) {\n  var sanitizedName = scratchXName.replace(/[^a-z0-9]/gi, '').toLowerCase();\n  return \"sbx\".concat(sanitizedName);\n};\n\n/**\n * @param {number} i 0-indexed index of argument in list\n * @returns {string} Scratch 3 argument name\n */\nvar argumentIndexToId = function argumentIndexToId(i) {\n  return i.toString();\n};\nmodule.exports = {\n  generateExtensionId: generateExtensionId,\n  argumentIndexToId: argumentIndexToId\n};\n\n/***/ }),\n\n/***/ \"./node_modules/scratch-vm/src/util/cast.js\":\n/*!**************************************************!*\\\n  !*** ./node_modules/scratch-vm/src/util/cast.js ***!\n  \\**************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar Color = __webpack_require__(/*! ../util/color */ \"./node_modules/scratch-vm/src/util/color.js\");\n\n/**\n * @fileoverview\n * Utilities for casting and comparing Scratch data-types.\n * Scratch behaves slightly differently from JavaScript in many respects,\n * and these differences should be encapsulated below.\n * For example, in Scratch, add(1, join(\"hello\", world\")) -> 1.\n * This is because \"hello world\" is cast to 0.\n * In JavaScript, 1 + Number(\"hello\" + \"world\") would give you NaN.\n * Use when coercing a value before computation.\n */\n\n/**\n * Used internally by compare()\n * @param {*} val A value that evaluates to 0 in JS string-to-number conversation such as empty string, 0, or tab.\n * @returns {boolean} True if the value should not be treated as the number zero.\n */\nvar isNotActuallyZero = function isNotActuallyZero(val) {\n  if (typeof val !== 'string') return false;\n  for (var i = 0; i < val.length; i++) {\n    var code = val.charCodeAt(i);\n    // '0'.charCodeAt(0) === 48\n    // '\\t'.charCodeAt(0) === 9\n    // We include tab for compatibility with scratch-www's broken trim() polyfill.\n    // https://github.com/TurboWarp/scratch-vm/issues/115\n    // https://scratch.mit.edu/projects/788261699/\n    if (code === 48 || code === 9) {\n      return false;\n    }\n  }\n  return true;\n};\nvar Cast = /*#__PURE__*/function () {\n  function Cast() {\n    _classCallCheck(this, Cast);\n  }\n  return _createClass(Cast, null, [{\n    key: \"toNumber\",\n    value:\n    /**\n     * Scratch cast to number.\n     * Treats NaN as 0.\n     * In Scratch 2.0, this is captured by `interp.numArg.`\n     * @param {*} value Value to cast to number.\n     * @return {number} The Scratch-casted number value.\n     */\n    function toNumber(value) {\n      // If value is already a number we don't need to coerce it with\n      // Number().\n      if (typeof value === 'number') {\n        // Scratch treats NaN as 0, when needed as a number.\n        // E.g., 0 + NaN -> 0.\n        if (Number.isNaN(value)) {\n          return 0;\n        }\n        return value;\n      }\n      var n = Number(value);\n      if (Number.isNaN(n)) {\n        // Scratch treats NaN as 0, when needed as a number.\n        // E.g., 0 + NaN -> 0.\n        return 0;\n      }\n      return n;\n    }\n\n    /**\n     * Scratch cast to boolean.\n     * In Scratch 2.0, this is captured by `interp.boolArg.`\n     * Treats some string values differently from JavaScript.\n     * @param {*} value Value to cast to boolean.\n     * @return {boolean} The Scratch-casted boolean value.\n     */\n  }, {\n    key: \"toBoolean\",\n    value: function toBoolean(value) {\n      // Already a boolean?\n      if (typeof value === 'boolean') {\n        return value;\n      }\n      if (typeof value === 'string') {\n        // These specific strings are treated as false in Scratch.\n        if (value === '' || value === '0' || value.toLowerCase() === 'false') {\n          return false;\n        }\n        // All other strings treated as true.\n        return true;\n      }\n      // Coerce other values and numbers.\n      return Boolean(value);\n    }\n\n    /**\n     * Scratch cast to string.\n     * @param {*} value Value to cast to string.\n     * @return {string} The Scratch-casted string value.\n     */\n  }, {\n    key: \"toString\",\n    value: function toString(value) {\n      return String(value);\n    }\n\n    /**\n     * Cast any Scratch argument to an RGB color array to be used for the renderer.\n     * @param {*} value Value to convert to RGB color array.\n     * @return {Array.<number>} [r,g,b], values between 0-255.\n     */\n  }, {\n    key: \"toRgbColorList\",\n    value: function toRgbColorList(value) {\n      var color = Cast.toRgbColorObject(value);\n      return [color.r, color.g, color.b];\n    }\n\n    /**\n     * Cast any Scratch argument to an RGB color object to be used for the renderer.\n     * @param {*} value Value to convert to RGB color object.\n     * @return {RGBOject} [r,g,b], values between 0-255.\n     */\n  }, {\n    key: \"toRgbColorObject\",\n    value: function toRgbColorObject(value) {\n      var color;\n      if (typeof value === 'string' && value.substring(0, 1) === '#') {\n        color = Color.hexToRgb(value);\n\n        // If the color wasn't *actually* a hex color, cast to black\n        if (!color) color = {\n          r: 0,\n          g: 0,\n          b: 0,\n          a: 255\n        };\n      } else {\n        color = Color.decimalToRgb(Cast.toNumber(value));\n      }\n      return color;\n    }\n\n    /**\n     * Determine if a Scratch argument is a white space string (or null / empty).\n     * @param {*} val value to check.\n     * @return {boolean} True if the argument is all white spaces or null / empty.\n     */\n  }, {\n    key: \"isWhiteSpace\",\n    value: function isWhiteSpace(val) {\n      return val === null || typeof val === 'string' && val.trim().length === 0;\n    }\n\n    /**\n     * Compare two values, using Scratch cast, case-insensitive string compare, etc.\n     * In Scratch 2.0, this is captured by `interp.compare.`\n     * @param {*} v1 First value to compare.\n     * @param {*} v2 Second value to compare.\n     * @returns {number} Negative number if v1 < v2; 0 if equal; positive otherwise.\n     */\n  }, {\n    key: \"compare\",\n    value: function compare(v1, v2) {\n      var n1 = Number(v1);\n      var n2 = Number(v2);\n      if (n1 === 0 && isNotActuallyZero(v1)) {\n        n1 = NaN;\n      } else if (n2 === 0 && isNotActuallyZero(v2)) {\n        n2 = NaN;\n      }\n      if (isNaN(n1) || isNaN(n2)) {\n        // At least one argument can't be converted to a number.\n        // Scratch compares strings as case insensitive.\n        var s1 = String(v1).toLowerCase();\n        var s2 = String(v2).toLowerCase();\n        if (s1 < s2) {\n          return -1;\n        } else if (s1 > s2) {\n          return 1;\n        }\n        return 0;\n      }\n      // Handle the special case of Infinity\n      if (n1 === Infinity && n2 === Infinity || n1 === -Infinity && n2 === -Infinity) {\n        return 0;\n      }\n      // Compare as numbers.\n      return n1 - n2;\n    }\n\n    /**\n     * Determine if a Scratch argument number represents a round integer.\n     * @param {*} val Value to check.\n     * @return {boolean} True if number looks like an integer.\n     */\n  }, {\n    key: \"isInt\",\n    value: function isInt(val) {\n      // Values that are already numbers.\n      if (typeof val === 'number') {\n        if (isNaN(val)) {\n          // NaN is considered an integer.\n          return true;\n        }\n        // True if it's \"round\" (e.g., 2.0 and 2).\n        return val === Math.floor(val);\n      } else if (typeof val === 'boolean') {\n        // `True` and `false` always represent integer after Scratch cast.\n        return true;\n      } else if (typeof val === 'string') {\n        // If it contains a decimal point, don't consider it an int.\n        return val.indexOf('.') < 0;\n      }\n      return false;\n    }\n  }, {\n    key: \"LIST_INVALID\",\n    get: function get() {\n      return 'INVALID';\n    }\n  }, {\n    key: \"LIST_ALL\",\n    get: function get() {\n      return 'ALL';\n    }\n\n    /**\n     * Compute a 1-based index into a list, based on a Scratch argument.\n     * Two special cases may be returned:\n     * LIST_ALL: if the block is referring to all of the items in the list.\n     * LIST_INVALID: if the index was invalid in any way.\n     * @param {*} index Scratch arg, including 1-based numbers or special cases.\n     * @param {number} length Length of the list.\n     * @param {boolean} acceptAll Whether it should accept \"all\" or not.\n     * @return {(number|string)} 1-based index for list, LIST_ALL, or LIST_INVALID.\n     */\n  }, {\n    key: \"toListIndex\",\n    value: function toListIndex(index, length, acceptAll) {\n      if (typeof index !== 'number') {\n        if (index === 'all') {\n          return acceptAll ? Cast.LIST_ALL : Cast.LIST_INVALID;\n        }\n        if (index === 'last') {\n          if (length > 0) {\n            return length;\n          }\n          return Cast.LIST_INVALID;\n        } else if (index === 'random' || index === 'any') {\n          if (length > 0) {\n            return 1 + Math.floor(Math.random() * length);\n          }\n          return Cast.LIST_INVALID;\n        }\n      }\n      index = Math.floor(Cast.toNumber(index));\n      if (index < 1 || index > length) {\n        return Cast.LIST_INVALID;\n      }\n      return index;\n    }\n  }]);\n}();\nmodule.exports = Cast;\n\n/***/ }),\n\n/***/ \"./node_modules/scratch-vm/src/util/color.js\":\n/*!***************************************************!*\\\n  !*** ./node_modules/scratch-vm/src/util/color.js ***!\n  \\***************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar Color = /*#__PURE__*/function () {\n  function Color() {\n    _classCallCheck(this, Color);\n  }\n  return _createClass(Color, null, [{\n    key: \"RGB_BLACK\",\n    get:\n    /**\n     * @typedef {object} RGBObject - An object representing a color in RGB format.\n     * @property {number} r - the red component, in the range [0, 255].\n     * @property {number} g - the green component, in the range [0, 255].\n     * @property {number} b - the blue component, in the range [0, 255].\n     */\n\n    /**\n     * @typedef {object} HSVObject - An object representing a color in HSV format.\n     * @property {number} h - hue, in the range [0-359).\n     * @property {number} s - saturation, in the range [0,1].\n     * @property {number} v - value, in the range [0,1].\n     */\n\n    /** @type {RGBObject} */\n    function get() {\n      return {\n        r: 0,\n        g: 0,\n        b: 0\n      };\n    }\n\n    /** @type {RGBObject} */\n  }, {\n    key: \"RGB_WHITE\",\n    get: function get() {\n      return {\n        r: 255,\n        g: 255,\n        b: 255\n      };\n    }\n\n    /**\n     * Convert a Scratch decimal color to a hex string, #RRGGBB.\n     * @param {number} decimal RGB color as a decimal.\n     * @return {string} RGB color as #RRGGBB hex string.\n     */\n  }, {\n    key: \"decimalToHex\",\n    value: function decimalToHex(decimal) {\n      if (decimal < 0) {\n        decimal += 0xFFFFFF + 1;\n      }\n      var hex = Number(decimal).toString(16);\n      hex = \"#\".concat('000000'.substr(0, 6 - hex.length)).concat(hex);\n      return hex;\n    }\n\n    /**\n     * Convert a Scratch decimal color to an RGB color object.\n     * @param {number} decimal RGB color as decimal.\n     * @return {RGBObject} rgb - {r: red [0,255], g: green [0,255], b: blue [0,255]}.\n     */\n  }, {\n    key: \"decimalToRgb\",\n    value: function decimalToRgb(decimal) {\n      var a = decimal >> 24 & 0xFF;\n      var r = decimal >> 16 & 0xFF;\n      var g = decimal >> 8 & 0xFF;\n      var b = decimal & 0xFF;\n      return {\n        r: r,\n        g: g,\n        b: b,\n        a: a > 0 ? a : 255\n      };\n    }\n\n    /**\n     * Convert a hex color (e.g., F00, #03F, #0033FF) to an RGB color object.\n     * @param {!string} hex Hex representation of the color.\n     * @return {RGBObject} null on failure, or rgb: {r: red [0,255], g: green [0,255], b: blue [0,255]}.\n     */\n  }, {\n    key: \"hexToRgb\",\n    value: function hexToRgb(hex) {\n      if (hex.startsWith('#')) {\n        hex = hex.substring(1);\n      }\n      var parsed = parseInt(hex, 16);\n      if (isNaN(parsed)) {\n        return null;\n      }\n      if (hex.length === 6) {\n        return {\n          r: parsed >> 16 & 0xff,\n          g: parsed >> 8 & 0xff,\n          b: parsed & 0xff\n        };\n      } else if (hex.length === 3) {\n        var r = parsed >> 8 & 0xf;\n        var g = parsed >> 4 & 0xf;\n        var b = parsed & 0xf;\n        return {\n          r: r << 4 | r,\n          g: g << 4 | g,\n          b: b << 4 | b\n        };\n      }\n      return null;\n    }\n\n    /**\n     * Convert an RGB color object to a hex color.\n     * @param {RGBObject} rgb - {r: red [0,255], g: green [0,255], b: blue [0,255]}.\n     * @return {!string} Hex representation of the color.\n     */\n  }, {\n    key: \"rgbToHex\",\n    value: function rgbToHex(rgb) {\n      return Color.decimalToHex(Color.rgbToDecimal(rgb));\n    }\n\n    /**\n     * Convert an RGB color object to a Scratch decimal color.\n     * @param {RGBObject} rgb - {r: red [0,255], g: green [0,255], b: blue [0,255]}.\n     * @return {!number} Number representing the color.\n     */\n  }, {\n    key: \"rgbToDecimal\",\n    value: function rgbToDecimal(rgb) {\n      return (rgb.r << 16) + (rgb.g << 8) + rgb.b;\n    }\n\n    /**\n    * Convert a hex color (e.g., F00, #03F, #0033FF) to a decimal color number.\n    * @param {!string} hex Hex representation of the color.\n    * @return {!number} Number representing the color.\n    */\n  }, {\n    key: \"hexToDecimal\",\n    value: function hexToDecimal(hex) {\n      return Color.rgbToDecimal(Color.hexToRgb(hex));\n    }\n\n    /**\n     * Convert an HSV color to RGB format.\n     * @param {HSVObject} hsv - {h: hue [0,360), s: saturation [0,1], v: value [0,1]}\n     * @return {RGBObject} rgb - {r: red [0,255], g: green [0,255], b: blue [0,255]}.\n     */\n  }, {\n    key: \"hsvToRgb\",\n    value: function hsvToRgb(hsv) {\n      var h = hsv.h % 360;\n      if (h < 0) h += 360;\n      var s = Math.max(0, Math.min(hsv.s, 1));\n      var v = Math.max(0, Math.min(hsv.v, 1));\n      var i = Math.floor(h / 60);\n      var f = h / 60 - i;\n      var p = v * (1 - s);\n      var q = v * (1 - s * f);\n      var t = v * (1 - s * (1 - f));\n      var r;\n      var g;\n      var b;\n      switch (i) {\n        default:\n        case 0:\n          r = v;\n          g = t;\n          b = p;\n          break;\n        case 1:\n          r = q;\n          g = v;\n          b = p;\n          break;\n        case 2:\n          r = p;\n          g = v;\n          b = t;\n          break;\n        case 3:\n          r = p;\n          g = q;\n          b = v;\n          break;\n        case 4:\n          r = t;\n          g = p;\n          b = v;\n          break;\n        case 5:\n          r = v;\n          g = p;\n          b = q;\n          break;\n      }\n      return {\n        r: Math.floor(r * 255),\n        g: Math.floor(g * 255),\n        b: Math.floor(b * 255)\n      };\n    }\n\n    /**\n     * Convert an RGB color to HSV format.\n     * @param {RGBObject} rgb - {r: red [0,255], g: green [0,255], b: blue [0,255]}.\n     * @return {HSVObject} hsv - {h: hue [0,360), s: saturation [0,1], v: value [0,1]}\n     */\n  }, {\n    key: \"rgbToHsv\",\n    value: function rgbToHsv(rgb) {\n      var r = rgb.r / 255;\n      var g = rgb.g / 255;\n      var b = rgb.b / 255;\n      var x = Math.min(Math.min(r, g), b);\n      var v = Math.max(Math.max(r, g), b);\n\n      // For grays, hue will be arbitrarily reported as zero. Otherwise, calculate\n      var h = 0;\n      var s = 0;\n      if (x !== v) {\n        var f = r === x ? g - b : g === x ? b - r : r - g;\n        var i = r === x ? 3 : g === x ? 5 : 1;\n        h = (i - f / (v - x)) * 60 % 360;\n        s = (v - x) / v;\n      }\n      return {\n        h: h,\n        s: s,\n        v: v\n      };\n    }\n\n    /**\n     * Linear interpolation between rgb0 and rgb1.\n     * @param {RGBObject} rgb0 - the color corresponding to fraction1 <= 0.\n     * @param {RGBObject} rgb1 - the color corresponding to fraction1 >= 1.\n     * @param {number} fraction1 - the interpolation parameter. If this is 0.5, for example, mix the two colors equally.\n     * @return {RGBObject} the interpolated color.\n     */\n  }, {\n    key: \"mixRgb\",\n    value: function mixRgb(rgb0, rgb1, fraction1) {\n      if (fraction1 <= 0) return rgb0;\n      if (fraction1 >= 1) return rgb1;\n      var fraction0 = 1 - fraction1;\n      return {\n        r: fraction0 * rgb0.r + fraction1 * rgb1.r,\n        g: fraction0 * rgb0.g + fraction1 * rgb1.g,\n        b: fraction0 * rgb0.b + fraction1 * rgb1.b\n      };\n    }\n  }]);\n}();\nmodule.exports = Color;\n\n/***/ }),\n\n/***/ \"./node_modules/scratch-vm/src/util/log.js\":\n/*!*************************************************!*\\\n  !*** ./node_modules/scratch-vm/src/util/log.js ***!\n  \\*************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar nanolog = __webpack_require__(/*! @turbowarp/nanolog */ \"./node_modules/@turbowarp/nanolog/index.js\");\nnanolog.enable();\nmodule.exports = nanolog('vm');\n\n/***/ }),\n\n/***/ \"./node_modules/webpack/buildin/global.js\":\n/*!***********************************!*\\\n  !*** (webpack)/buildin/global.js ***!\n  \\***********************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\nvar g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n/***/ })\n\n/******/ });\n//# sourceMappingURL=extension worker.js.map";

/***/ })

}]);
//# sourceMappingURL=iframe-extension-worker.js.map